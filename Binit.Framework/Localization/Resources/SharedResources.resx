<?xml version="1.0" encoding="utf-8"?>
<root>
    <!--
      Microsoft ResX Schema

      Version 2.0

      The primary goals of this format is to allow a simple XML format
      that is mostly human readable. The generation and parsing of the
      various data types are done through the TypeConverter classes
      associated with the data types.

      Example:

      ... ado.net/XML headers & schema ...
      <resheader name="resmimetype">text/microsoft-resx</resheader>
      <resheader name="version">2.0</resheader>
      <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
      <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
      <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
      <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
      <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
          <value>[base64 mime encoded serialized .NET Framework object]</value>
      </data>
      <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
          <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
          <comment>This is a comment</comment>
      </data>

      There are any number of "resheader" rows that contain simple
      name/value pairs.

      Each data row contains a name, and value. The row also contains a
      type or mimetype. Type corresponds to a .NET class that support
      text/value conversion through the TypeConverter architecture.
      Classes that don't support this are serialized and stored with the
      mimetype set.

      The mimetype is used for serialized objects, and tells the
      ResXResourceReader how to depersist the object. This is currently not
      extensible. For a given mimetype the value must be set accordingly:

      Note - application/x-microsoft.net.object.binary.base64 is the format
      that the ResXResourceWriter will generate, however the reader can
      read any of the formats listed below.

      mimetype: application/x-microsoft.net.object.binary.base64
      value   : The object must be serialized with
              : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
              : and then encoded with base64 encoding.

      mimetype: application/x-microsoft.net.object.soap.base64
      value   : The object must be serialized with
              : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
              : and then encoded with base64 encoding.

      mimetype: application/x-microsoft.net.object.bytearray.base64
      value   : The object must be serialized into a byte array
              : using a System.ComponentModel.TypeConverter
              : and then encoded with base64 encoding.
      -->
    <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
        <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
        <xsd:element name="root" msdata:IsDataSet="true">
            <xsd:complexType>
                <xsd:choice maxOccurs="unbounded">
                    <xsd:element name="metadata">
                        <xsd:complexType>
                            <xsd:sequence>
                                <xsd:element name="value" type="xsd:string" minOccurs="0" />
                            </xsd:sequence>
                            <xsd:attribute name="name" use="required" type="xsd:string" />
                            <xsd:attribute name="type" type="xsd:string" />
                            <xsd:attribute name="mimetype" type="xsd:string" />
                            <xsd:attribute ref="xml:space" />
                        </xsd:complexType>
                    </xsd:element>
                    <xsd:element name="assembly">
                        <xsd:complexType>
                            <xsd:attribute name="alias" type="xsd:string" />
                            <xsd:attribute name="name" type="xsd:string" />
                        </xsd:complexType>
                    </xsd:element>
                    <xsd:element name="data">
                        <xsd:complexType>
                            <xsd:sequence>
                                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
                            </xsd:sequence>
                            <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
                            <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
                            <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
                            <xsd:attribute ref="xml:space" />
                        </xsd:complexType>
                    </xsd:element>
                    <xsd:element name="resheader">
                        <xsd:complexType>
                            <xsd:sequence>
                                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                            </xsd:sequence>
                            <xsd:attribute name="name" type="xsd:string" use="required" />
                        </xsd:complexType>
                    </xsd:element>
                </xsd:choice>
            </xsd:complexType>
        </xsd:element>
    </xsd:schema>
    <resheader name="resmimetype">
        <value>text/microsoft-resx</value>
    </resheader>
    <resheader name="version">
        <value>2.0</value>
    </resheader>
    <resheader name="reader">
        <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
    </resheader>
    <resheader name="writer">
        <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
    </resheader>

    <!-- Exceptions -->
    <!-- DAL -->
    <data name="DAL.Service.GetNotFoundEx" xml:space="preserve">
    <value>Entity doesn't exist (Error 0001)</value>
  </data>
    <data name="DAL.Service.GetAsyncNotFoundEx" xml:space="preserve">
    <value>Entity doesn't exist (Error 0002)</value>
  </data>
    <data name="DAL.Service.AccessDeniedEx" xml:space="preserve">
    <value>You don't have the required permissions to operate with this entity (Error 0036)</value>
  </data>
    <data name="DAL.Service.CanAccessUnexpectedEx" xml:space="preserve">
    <value>You don't have the required permissions to operate with this entity (Error 0037)</value>
  </data>
    <data name="DAL.ServiceTenantDependents.AccessDeniedEx" xml:space="preserve">
    <value>You can operate with this entity because you don't belong to the required tenants (Error 0038)</value>
  </data>
    <!-- End DAL -->
    <!-- Binit.Framework -->
    <!-- Exception Handling -->
    <data name="Binit.Framework.ExceptionHandling.HandleEmailEx" xml:space="preserve">
    <value>There was an error sending the email (Error 0003)</value>
  </data>
    <data name="Binit.Framework.ExceptionHandling.HandleSQLEx" xml:space="preserve">
    <value>There was a data access error (Error 0004)</value>
  </data>
    <data name="Binit.Framework.ExceptionHandling.HandleIOEx" xml:space="preserve">
    <value>There was a file access error (Error 0005)</value>
  </data>
    <data name="Binit.Framework.ExceptionHandling.HandleGenericEx" xml:space="preserve">
    <value>An unexpected error ocurred (Error 0006)</value>
  </data>
    <data name="Binit.Framework.ExceptionHandling.RealmAuthorizationFailedEx" xml:space="preserve">
    <value>Access denied (Error 0039)</value>
  </data>
    <data name="Binit.Framework.ExceptionHandling.ResourceNotFoundGenericEx" xml:space="preserve">
    <value>The resource you're trying to see was not found (Error 0040)</value>
  </data>
    <data name="Binit.Framework.ExceptionHandling.HandleUnauthorizedEx" xml:space="preserve">
    <value>Access unauthorized (Error 0041)</value>
  </data>
    <data name="Binit.Framework.ExceptionHandling.HandleDbValidationEx" xml:space="preserve">
    <value>There was validation error while saving the data (Error 0044)</value>
  </data>
    <!-- End Exception Handling -->
    <!-- Helpers -->
    <!-- Email -->
    <!-- Views -->
    <!-- Welcome -->
    <data name="Binit.Framework.Helpers.Email.Views.Welcome.Title" xml:space="preserve">
    <value>Welcome</value>
  </data>
    <data name="Binit.Framework.Helpers.Email.Views.Welcome.Intro" xml:space="preserve">
    <value>Welcome {0}</value>
  </data>
    <data name="Binit.Framework.Helpers.Email.Views.Welcome.CallToActionText" xml:space="preserve">
    <value>Click the following link to confirm your email:</value>
  </data>
    <data name="Binit.Framework.Helpers.Email.Views.Welcome.CallToActionButton" xml:space="preserve">
    <value>Confirm email</value>
  </data>
    <data name="Binit.Framework.Helpers.Email.Views.Welcome.Footer" xml:space="preserve">
    <value>© 2019 {0}. All Rights Reserved.</value>
  </data>
    <!-- End Welcome -->
    <!-- ForgotPassword -->
    <data name="Binit.Framework.Helpers.Email.Views.ForgotPassword.Title" xml:space="preserve">
    <value>Forgot Password</value>
  </data>
    <data name="Binit.Framework.Helpers.Email.Views.ForgotPassword.Intro" xml:space="preserve">
    <value>{0}, Forgot your password?</value>
  </data>
    <data name="Binit.Framework.Helpers.Email.Views.ForgotPassword.CallToActionText" xml:space="preserve">
    <value>Click the following link to reset your password: </value>
  </data>
    <data name="Binit.Framework.Helpers.Email.Views.ForgotPassword.CallToActionButton" xml:space="preserve">
    <value>Reset password</value>
  </data>
    <data name="Binit.Framework.Helpers.Email.Views.ForgotPassword.Footer" xml:space="preserve">
    <value>© 2019 {0} - BINIR SRL. All Rights Reserved.</value>
  </data>
    <!-- End ForgotPassword -->
    <!-- PasswordRecovery -->
    <data name="Binit.Framework.Helpers.Email.Views.PasswordRecovery.Title" xml:space="preserve">
    <value>Password Recovery</value>
  </data>
    <data name="Binit.Framework.Helpers.Email.Views.PasswordRecovery.CallToActionText" xml:space="preserve">
    <value>Click the following link to recover your password:</value>
  </data>
    <data name="Binit.Framework.Helpers.Email.Views.PasswordRecovery.CallToActionButton" xml:space="preserve">
    <value>Recover password</value>
  </data>
    <data name="Binit.Framework.Helpers.Email.Views.PasswordRecovery.Footer" xml:space="preserve">
    <value>© 2019 {0} - BINIR SRL. All Rights Reserved.</value>
  </data>
    <!-- End PasswordRecovery -->
    <!-- End Views -->
    <!-- End Email -->
    <!-- ExcelHelper -->
    <data name="Binit.Framework.Helpers.ExcelHelper.ImportWrongFileExtensionEx" xml:space="preserve">
    <value>File extension not supported (Error 0042)</value>
  </data>
    <data name="Binit.Framework.Helpers.ExcelHelper.ImportFileNotProvidedEx" xml:space="preserve">
    <value>File empty or not provided (Error 0043)</value>
  </data>
    <data name="Binit.Framework.Helpers.ExcelHelper.ImportInvalidDateFormat" xml:space="preserve">
    <value>Date must be in {0} format</value>
  </data>
    <data name="Binit.Framework.Helpers.ExcelHelper.ImportCouldntCastValue" xml:space="preserve">
    <value>The value {0} could not be casted to {1}</value>
  </data>
    <data name="Binit.Framework.Helpers.ExcelHelper.ExportHeadersDontMatchCells" xml:space="preserve">
    <value>The amount of headers does not match the amount of cells.</value>
  </data>
    <!-- End ExcelHelper -->
    <!-- End Helpers -->
    <!-- End Binit.Framework -->
    <!-- Domain.Logic.BusinessLogic -->
    <!-- HolidayBusinessLogic -->
    <data name="Domain.Logic.BusinessLogic.HolidayBusinessLogic.ExcelExportFilename" xml:space="preserve">
    <value>Holidays-{0}.xlsx</value>
  </data>
    <!-- End HolidayBusinessLogic -->
  <!-- StatisticsBusinessLogic -->
  <data name="Domain.Logic.BusinessLogic.StatisticsBusinessLogic.ExcelExportFilename" xml:space="preserve">
    <value>DiasNoLaborales-{0}.xlsx</value>
  </data>
  <data name="Domain.Logic.BusinessLogic.StatisticsBusinessLogic.TotalGames" xml:space="preserve">
    <value>Total games</value>
  </data>
  <data name="Domain.Logic.BusinessLogic.StatisticsBusinessLogic.Finished" xml:space="preserve">
    <value>Games finished</value>
  </data>
  <data name="Domain.Logic.BusinessLogic.StatisticsBusinessLogic.CorrectAnswers" xml:space="preserve">
    <value>Percentage of correct answers</value>
  </data>
  <!-- End StatisticsBusinessLogic -->
    <!-- End Domain.Logic.BusinessLogic -->
    <!-- Domain.Logic.Services -->
    <!-- ErrorLogService -->
    <data name="Domain.Logic.Services.ErrorLogService.LogErrorFailedEx" xml:space="preserve">
    <value>Error logging the exception. Make sure the log database exists and its location matches its connection string (Error 0035). 
    -------------------------------------------------------------------- Exception:  
    {0}
    ------------------------------------------------ Error that couldn't be logged:
    {1}
    </value>
  </data>
    <!--End ErrorLogService -->
    <!-- AccountService -->
    <data name="Domain.Logic.Services.AccountService.LoginUserNotFoundEx" xml:space="preserve">
    <value>User doesn't exist (Error 0007)</value>
  </data>
    <data name="Domain.Logic.Services.AccountService.RegisterFailedEx" xml:space="preserve">
    <value>User registration failed (Error 0008)</value>
  </data>
    <data name="Domain.Logic.Services.AccountService.RegisterInvalidPasswordEx" xml:space="preserve">
    <value>The password requires at least 6 characters, one digit, one uppercase letter and one symbol (Error 0032)</value>
  </data>
    <data name="Domain.Logic.Services.AccountService.ConfirmEmailUserNotFoundEx" xml:space="preserve">
    <value>User doesn't exist (Error 0009)</value>
  </data>
    <data name="Domain.Logic.Services.AccountService.ConfirmEmailFailedEx" xml:space="preserve">
    <value>Confirm email failed (Error 0010)</value>
  </data>
    <data name="Domain.Logic.Services.AccountService.CreatePasswordUserNotFoundEx" xml:space="preserve">
    <value>User doesn't exist (Error 0011)</value>
  </data>
    <data name="Domain.Logic.Services.AccountService.CreatePasswordConfirmEmailFailedEx" xml:space="preserve">
    <value>Confirm email failed (Error 0012)</value>
  </data>
    <data name="Domain.Logic.Services.AccountService.CreatePasswordAddPasswordFailedEx" xml:space="preserve">
    <value>Set password failed (Error 0013)</value>
  </data>
    <data name="Domain.Logic.Services.AccountService.GeneratePasswordTokenUserNotFoundEx" xml:space="preserve">
    <value>User doesn't exist or hasn't been confirmed (Error 0014)</value>
  </data>
    <data name="Domain.Logic.Services.AccountService.ResetPasswordUserNotFoundEx" xml:space="preserve">
    <value>User doesn't exist (Error 0015)</value>
  </data>
    <data name="Domain.Logic.Services.AccountService.ResetPasswordFailedEx" xml:space="preserve">
    <value>Password reset failed (Error 0016)</value>
  </data>
    <data name="Domain.Logic.Services.AccountService.ChangePasswordUserNotFoundEx" xml:space="preserve">
    <value>No user logged in (Error 0017)</value>
  </data>
    <data name="Domain.Logic.Services.AccountService.ChangePasswordFailedEx" xml:space="preserve">
    <value>Change password failed (Error 0018)</value>
  </data>
    <data name="Domain.Logic.Services.AccountService.SetPasswordUserNotFoundEx" xml:space="preserve">
    <value>No user logged in (Error 0019)</value>
  </data>
    <data name="Domain.Logic.Services.AccountService.SetPasswordFailedEx" xml:space="preserve">
    <value>Set password failed (Error 0020)</value>
  </data>
    <data name="Domain.Logic.Services.AccountService.SocialAuthenticationFailedEx" xml:space="preserve">
    <value>Login with your social network failed (Error 0021)</value>
  </data>
    <!-- End AccountService -->
    <!-- UserService -->
    <data name="Domain.Logic.Services.UserService.CreateAsyncFailed" xml:space="preserve">
    <value>User registration failed (Error 0021)</value>
  </data>
    <data name="Domain.Logic.Services.UserService.CreateAsyncAddRolesFailed" xml:space="preserve">
    <value>Error adding roles to user (Error 0022)</value>
  </data>
    <data name="Domain.Logic.Services.UserService.CreateAsyncAddTenantClaimFailedEx" xml:space="preserve">
    <value>Error adding tenant claim (Error 0046)</value>
  </data>
    <data name="Domain.Logic.Services.UserService.UpdateAsyncFailed" xml:space="preserve">
    <value>Error updating user (Error 0023)</value>
  </data>
    <data name="Domain.Logic.Services.UserService.UpdateAsyncRemoveRolesFailed" xml:space="preserve">
    <value>Error removing roles from user (Error 0024)</value>
  </data>
    <data name="Domain.Logic.Services.UserService.UpdateAsyncAddRolesFailed" xml:space="preserve">
    <value>Error adding roles to user (Error 0025)</value>
  </data>
    <data name="Domain.Logic.Services.UserService.UpdateAsyncReplaceTenantClaimFailedEx" xml:space="preserve">
    <value>Error replacing tenant claim (Error 0045)</value>
  </data>
    <data name="Domain.Logic.Services.UserService.AutoDeleteNotAllowed" xml:space="preserve">
    <value>Users cannot delete themselves</value>
  </data>
    <!-- End UserService -->
    <!-- FrontUserService -->
    <data name="Domain.Logic.Services.FrontUserService.CreateAsyncFailed" xml:space="preserve">
    <value>Front User registration failed (Error 0021)</value>
  </data>
    <data name="Domain.Logic.Services.FrontUserService.CreateAsyncAddRolesFailed" xml:space="preserve">
    <value>Error adding roles to Front user (Error 0022)</value>
  </data>
    <data name="Domain.Logic.Services.FrontUserService.UpdateAsyncFailed" xml:space="preserve">
    <value>Error updating Front user (Error 0023)</value>
  </data>
    <data name="Domain.Logic.Services.FrontUserService.UpdateAsyncRemoveRolesFailed" xml:space="preserve">
    <value>Error removing roles from Front user (Error 0024)</value>
  </data>
    <data name="Domain.Logic.Services.FrontUserService.UpdateAsyncAddRolesFailed" xml:space="preserve">
    <value>Error adding roles to Front user (Error 0025)</value>
  </data>
    <!-- End FrontUserService -->
    <!-- BackOfficeUserService -->
    <data name="Domain.Logic.Services.BackOfficeUserService.CreateAsyncFailed" xml:space="preserve">
    <value>BackOffice User registration failed (Error 0021)</value>
  </data>
    <data name="Domain.Logic.Services.BackOfficeUserService.CreateAsyncAddRolesFailed" xml:space="preserve">
    <value>Error adding roles to BackOffice user (Error 0022)</value>
  </data>
    <data name="Domain.Logic.Services.BackOfficeUserService.UpdateAsyncFailed" xml:space="preserve">
    <value>Error updating BackOffice user (Error 0023)</value>
  </data>
    <data name="Domain.Logic.Services.BackOfficeUserService.UpdateAsyncRemoveRolesFailed" xml:space="preserve">
    <value>Error removing roles from BackOffice user (Error 0024)</value>
  </data>
    <data name="Domain.Logic.Services.BackOfficeUserService.UpdateAsyncAddRolesFailed" xml:space="preserve">
    <value>Error adding roles to BackOffice user (Error 0025)</value>
  </data>
    <!-- End BackOfficeUserService -->
    <!-- CategoryService -->
    <data name="Domain.Logic.Services.CategoryService.DeleteWithRelatedProductEx" xml:space="preserve">
    <value>This category is related to a product and it can't be removed (Error 0026)</value>
  </data>
    <data name="Domain.Logic.Services.CategoryService.DeleteAsyncWithRelatedProductEx" xml:space="preserve">
    <value>This category is related to a product and it can't be removed (Error 0027)</value>
  </data>
    <!-- End CategoryService -->
    <!-- ProductService -->
    <data name="Domain.Logic.Services.ProductService.GetFullNotFoundEx" xml:space="preserve">
    <value>Product not found (Error 0028)</value>
  </data>
    <data name="Domain.Logic.Services.ProductService.GetFullAsyncNotFoundEx" xml:space="preserve">
    <value>Product not found (Error 0029)</value>
  </data>
    <!-- End ProductService -->
  <!-- ThemeService -->
  <data name="Domain.Logic.Services.ThemeService.GetFullNotFoundEx" xml:space="preserve">
    <value>Theme not found (Error 0028)</value>
  </data>
  <data name="Domain.Logic.Services.ThemeService.GetFullAsyncNotFoundEx" xml:space="preserve">
    <value>Theme not found (Error 0029)</value>
  </data>
  <data name="Domain.Logic.Services.ThemeService.DeleteAsyncWithRelatedThemeEx" xml:space="preserve">
    <value>This theme can not be deleted</value>
  </data>
  <!-- End ThemeService -->
    <!-- HolidayTypeService -->
    <data name="Domain.Logic.Services.HolidayTypeService.DeleteWithRelatedHolidayEx" xml:space="preserve">
    <value>This holiday type is related to a holiday and it can't be removed (Error 0030)</value>
  </data>
    <data name="Domain.Logic.Services.HolidayTypeService.DeleteAsyncWithRelatedHolidayEx" xml:space="preserve">
    <value>This holiday type is related to a holiday and it can't be removed (Error 0031)</value>
  </data>
    <!-- End HolidayTypeService -->
    <!-- GeneroService -->
    <data name="Domain.Logic.Services.GeneroService.DeleteWithRelatedPeliculaEx" xml:space="preserve">
    <value>This genre type is related to a movie and it can't be removed (Error 0030)</value>
  </data>
    <data name="Domain.Logic.Services.GeneroService.DeleteAsyncWithRelatedPeliculaEx" xml:space="preserve">
    <value>This genre type is related to a movie and it can't be removed (Error 0030)</value>
  </data>
    <!-- End GeneroService -->
    <!-- HolidayService -->
    <data name="Domain.Logic.Services.HolidayService.GetFullNotFoundEx" xml:space="preserve">
    <value>Holiday not found (Error 0028)</value>
  </data>
    <data name="Domain.Logic.Services.HolidayService.GetFullAsyncNotFoundEx" xml:space="preserve">
    <value>Holiday not found (Error 0029)</value>
  </data>
    <!-- End HolidayService -->
    <!-- EventService -->
    <data name="Domain.Logic.Services.EventService.GetFullNotFoundEx" xml:space="preserve">
    <value>Event not found (Error 00)</value>
  </data>
    <data name="Domain.Logic.Services.EventService.GetFullAsyncNotFoundEx" xml:space="preserve">
    <value>Event not found (Error 00)</value>
  </data>
    <!-- End EventService -->
    <!-- End Domain.Logic.Services -->
    <!-- End Exceptions -->
    <!-- Web API -->
    <!-- AccountController -->
    <data name="WebAPI.Controllers.AccountController.LoginRequires2FA" xml:space="preserve">
    <value>Requires 2 factor authentication</value>
  </data>
    <data name="WebAPI.Controllers.AccountController.LoginAccountLocked" xml:space="preserve">
    <value>The account is locked out</value>
  </data>
    <data name="WebAPI.Controllers.AccountController.LoginIncorrectCredentials" xml:space="preserve">
    <value>Incorrect email or password</value>
  </data>
    <data name="WebAPI.Controllers.AccountController.LoginError" xml:space="preserve">
    <value>There was an error with the login. Try again later.</value>
  </data>
    <data name="WebAPI.Controllers.AccountController.RegisterEmailSubject" xml:space="preserve">
    <value>Confirm your email</value>
  </data>
    <data name="WebAPI.Controllers.AccountController.ForgotPasswordEmailSubject" xml:space="preserve">
    <value>Reset password</value>
  </data>
    <data name="WebAPI.Controllers.AccountController.ChangePasswordNotFound" xml:space="preserve">
    <value>User not found</value>
  </data>
    <data name="WebAPI.Controllers.AccountController.SetPasswordNotFound" xml:space="preserve">
    <value>User not found</value>
  </data>
    <data name="WebAPI.Controllers.AccountController.CreatePasswordNotFound" xml:space="preserve">
    <value>User not found</value>
  </data>
    <!-- End AccountController -->
  <!-- StatisticsController -->
  <data name="WebApp.Controllers.StatisticsController.IndexTitle" xml:space="preserve">
    <value>Stadistics</value>
  </data>
  <data name="WebApp.Controllers.StatisticsController.PieChart" xml:space="preserve">
    <value>Percentage of answers by theme</value>
  </data>
  <data name="WebApp.Controllers.StatisticsController.BarChart" xml:space="preserve">
    <value>Perfect games by theme</value>
  </data>
  <data name="WebApp.Controllers.StatisticsController.InvertChart" xml:space="preserve">
    <value>Percentage of correct answers by theme</value>
  </data>
  <data name="WebApp.Controllers.StatisticsController.DeleteUnexpectedError" xml:space="preserve">
    <value>Ups! Something unexpected happened</value>
  </data>
  <!-- End StatisticsController -->
    <!-- ThemeController -->
    <data name="WebApp.Controllers.ThemeController.IndexTitle" xml:space="preserve">
    <value>Themes list</value>
  </data>
    <data name="WebApp.Controllers.ThemeController.CreateTitle" xml:space="preserve">
    <value>New Theme</value>
  </data>
    <data name="WebApp.Controllers.ThemeController.EditTitle" xml:space="preserve">
    <value>Edit</value>
  </data>
    <data name="WebApp.Controllers.ThemeController.DetailsTitle" xml:space="preserve">
    <value>Details</value>
  </data>
    <data name="WebApp.Controllers.ThemeController.DeleteSuccess" xml:space="preserve">
    <value>The theme was deleted</value>
  </data>
    <data name="WebApp.Controllers.ThemeController.DeleteUnexpectedError" xml:space="preserve">
    <value>Ups! Something unexpected happened</value>
  </data>
    <!-- End ThemeController -->
    <!-- GameController -->
    <data name="WebApp.Controllers.GameController.IndexTitle" xml:space="preserve">
    <value>Game</value>
  </data>
    <data name="WebApp.Controllers.GameController.ResultTitle" xml:space="preserve">
    <value>Results</value>
  </data>
    <data name="WebApp.Controllers.GameController.PlayTitle" xml:space="preserve">
    <value>Playing</value>
  </data>
    <data name="WebApp.Views.Game.Index.Play" xml:space="preserve">
    <value>Play</value>
  </data>
    <data name="WebApp.Views.Game.Play.Next" xml:space="preserve">
    <value>Next</value>
  </data>
    <data name="WebApp.Views.Game.Play.Done" xml:space="preserve">
    <value>Finish</value>
  </data>
  <data name="WebApp.Views.Game.Index.Statistics" xml:space="preserve">
    <value>Statistics</value>
  </data>
    <data name="WebApp.Views.Game.Index.Soon" xml:space="preserve">
    <value>Coming soon</value>
  </data>
    <data name="WebApp.Controllers.QuestionController.DeleteUnexpectedError" xml:space="preserve">
    <value>Ups! Something unexpected happened</value>
  </data>
    <!-- End GameController -->
  <!-- StatisticsController -->
  <data name="WebApp.Views.Statistics.Index.Play" xml:space="preserve">
    <value>Play</value>   
    </data>
  <!-- End StatisticsController -->
    <!-- UserController -->
    <data name="WebAPI.Controllers.UserController.CreateWelcomeEmailSubject" xml:space="preserve">
    <value>Confirm your email</value>
  </data>
    <data name="WebAPI.Controllers.UserController.PasswordRecoveryEmailSubject" xml:space="preserve">
    <value>Recover your password</value>
  </data>
    <!-- End UserController -->
    <!-- AccountDTOs -->
    <!-- ChangePasswordReq -->
    <data name="WebAPI.DTOs.AccountDTOs.ChangePasswordReq.OldPasswordStringLength" xml:space="preserve">
    <value>The {0} must be at least {2} and at max {1} characters long.</value>
  </data>
    <data name="WebAPI.DTOs.AccountDTOs.ChangePasswordReq.OldPasswordRequired" xml:space="preserve">
    <value>The Current Password is required.</value>
  </data>
    <data name="WebAPI.DTOs.AccountDTOs.ChangePasswordReq.NewPasswordStringLength" xml:space="preserve">
    <value>The {0} must be at least {2} and at max {1} characters long.</value>
  </data>
    <data name="WebAPI.DTOs.AccountDTOs.ChangePasswordReq.NewPasswordRequired" xml:space="preserve">
    <value>The New Password is required.</value>
  </data>
    <data name="WebAPI.DTOs.AccountDTOs.ChangePasswordReq.ConfirmPasswordCompare" xml:space="preserve">
    <value>The new password and confirmation password do not match.</value>
  </data>
    <!-- End ChangePasswordReq -->
    <!-- ConfirmEmailReq -->
    <data name="WebAPI.DTOs.AccountDTOs.ConfirmEmailReq.UserIdRequired" xml:space="preserve">
    <value>The user id is required.</value>
  </data>
    <data name="WebAPI.DTOs.AccountDTOs.ConfirmEmailReq.CodeRequired" xml:space="preserve">
    <value>The confirmation code is required.</value>
  </data>
    <!-- End ConfirmEmailReq -->
    <!-- CreatePasswordReq -->
    <data name="WebAPI.DTOs.AccountDTOs.CreatePasswordReq.UserIdRequired" xml:space="preserve">
    <value>The user id is required.</value>
  </data>
    <data name="WebAPI.DTOs.AccountDTOs.CreatePasswordReq.CodeRequired" xml:space="preserve">
    <value>The confirmation code is required.</value>
  </data>
    <data name="WebAPI.DTOs.AccountDTOs.CreatePasswordReq.NewPasswordRequired" xml:space="preserve">
    <value>The new password is required.</value>
  </data>
    <data name="WebAPI.DTOs.AccountDTOs.CreatePasswordReq.NewPasswordStringLength" xml:space="preserve">
    <value>The {0} must be at least {2} and at max {1} characters long.</value>
  </data>
    <data name="WebAPI.DTOs.AccountDTOs.CreatePasswordReq.ConfirmPasswordCompare" xml:space="preserve">
    <value>The new password and confirmation password do not match.</value>
  </data>
    <!-- End CreatePasswordReq -->
    <!-- ForgotPasswordReq -->
    <data name="WebAPI.DTOs.AccountDTOs.ForgotPasswordReq.EmailRequired" xml:space="preserve">
    <value>The Email is required.</value>
  </data>
    <data name="WebAPI.DTOs.AccountDTOs.ForgotPasswordReq.EmailInvalid" xml:space="preserve">
    <value>The Email is not valid.</value>
  </data>
    <data name="WebAPI.DTOs.AccountDTOs.ForgotPasswordReq.ForgotPasswordEmailCallbackRequired" xml:space="preserve">
    <value>The ForgotPasswordEmailCallback is required.</value>
  </data>
    <!-- End ForgotPasswordReq -->
    <!-- LoginReq -->
    <data name="WebAPI.DTOs.AccountDTOs.LoginReq.EmailRequired" xml:space="preserve">
    <value>The Email is required.</value>
  </data>
    <data name="WebAPI.DTOs.AccountDTOs.LoginReq.EmailInvalid" xml:space="preserve">
    <value>The Email is not valid.</value>
  </data>
    <data name="WebAPI.DTOs.AccountDTOs.LoginReq.PasswordRequired" xml:space="preserve">
    <value>The Password is required.</value>
  </data>
    <!-- End LoginReq -->
    <!-- RegisterReq -->
    <data name="WebAPI.DTOs.AccountDTOs.RegisterReq.EmailRequired" xml:space="preserve">
    <value>The Email is required.</value>
  </data>
    <data name="WebAPI.DTOs.AccountDTOs.RegisterReq.EmailInvalid" xml:space="preserve">
    <value>The Email is not valid.</value>
  </data>
    <data name="WebAPI.DTOs.AccountDTOs.RegisterReq.PasswordRequired" xml:space="preserve">
    <value>The Password is required.</value>
  </data>
    <data name="WebAPI.DTOs.AccountDTOs.RegisterReq.NameRequired" xml:space="preserve">
    <value>The Name is required.</value>
  </data>
    <data name="WebAPI.DTOs.AccountDTOs.RegisterReq.NameStringLength" xml:space="preserve">
    <value>The Name must be {1} characters max.</value>
  </data>
    <data name="WebAPI.DTOs.AccountDTOs.RegisterReq.LastNameRequired" xml:space="preserve">
    <value>The Last name is required.</value>
  </data>
    <data name="WebAPI.DTOs.AccountDTOs.RegisterReq.LastNameStringLength" xml:space="preserve">
    <value>The Last name must be {1} characters max.</value>
  </data>
    <data name="WebAPI.DTOs.AccountDTOs.RegisterReq.ConfirmEmailCallbackRequired" xml:space="preserve">
    <value>The ConfirmEmailCallback is required</value>
  </data>
    <!-- End RegisterReq -->
    <!-- ResetPasswordReq -->
    <data name="WebAPI.DTOs.AccountDTOs.ResetPasswordReq.EmailRequired" xml:space="preserve">
    <value>The Email is required.</value>
  </data>
    <data name="WebAPI.DTOs.AccountDTOs.ResetPasswordReq.EmailInvalid" xml:space="preserve">
    <value>The Email is not valid.</value>
  </data>
    <data name="WebAPI.DTOs.AccountDTOs.ResetPasswordReq.PasswordRequired" xml:space="preserve">
    <value>The Password is required.</value>
  </data>
    <data name="WebAPI.DTOs.AccountDTOs.ResetPasswordReq.PasswordStringLength" xml:space="preserve">
    <value>The {0} must be at least {2} and at max {1} characters long.</value>
  </data>
    <data name="WebAPI.DTOs.AccountDTOs.ResetPasswordReq.ConfirmPasswordCompare" xml:space="preserve">
    <value>The password and confirmation password do not match.</value>
  </data>
    <data name="WebAPI.DTOs.AccountDTOs.ResetPasswordReq.CodeRequired" xml:space="preserve">
    <value>The reset password code is required.</value>
  </data>
    <!-- End ResetPasswordReq -->
    <!-- SetPasswordReq -->
    <data name="WebAPI.DTOs.AccountDTOs.SetPasswordReq.NewPasswordRequired" xml:space="preserve">
    <value>The New Password is required.</value>
  </data>
    <data name="WebAPI.DTOs.AccountDTOs.SetPasswordReq.NewPasswordStringLength" xml:space="preserve">
    <value>The {0} must be at least {2} and at max {1} characters long.</value>
  </data>
    <data name="WebAPI.DTOs.AccountDTOs.SetPasswordReq.ConfirmPasswordCompare" xml:space="preserve">
    <value>The password and confirmation password do not match.</value>
  </data>
    <!-- End SetPasswordReq -->
    <!-- End AccountDTOs -->
    <!-- ApplicationUserDTOs -->
    <!-- ApplicationUserDTO -->
    <data name="WebAPI.DTOs.ApplicationUserDTOs.ApplicationUserDTO.EmailRequired" xml:space="preserve">
    <value>The Email is required.</value>
  </data>
    <data name="WebAPI.DTOs.ApplicationUserDTOs.ApplicationUserDTO.EmailInvalid" xml:space="preserve">
    <value>The Email is not valid.</value>
  </data>
    <data name="WebAPI.DTOs.ApplicationUserDTOs.ApplicationUserDTO.NameRequired" xml:space="preserve">
    <value>The Name is required.</value>
  </data>
    <data name="WebAPI.DTOs.ApplicationUserDTOs.ApplicationUserDTO.NameStringLength" xml:space="preserve">
    <value>The Name must be {1} characters max.</value>
  </data>
    <data name="WebAPI.DTOs.ApplicationUserDTOs.ApplicationUserDTO.LastNameRequired" xml:space="preserve">
    <value>The Last name is required.</value>
  </data>
    <data name="WebAPI.DTOs.ApplicationUserDTOs.ApplicationUserDTO.LastNameStringLength" xml:space="preserve">
    <value>The Last name must be {1} characters max.</value>
  </data>
    <data name="WebAPI.DTOs.ApplicationUserDTOs.ApplicationUserDTO.RolesRequired" xml:space="preserve">
    <value>The Roles are required.</value>
  </data>
    <!-- End ApplicationUserDTO -->
    <!-- CreateUserReq -->
    <data name="WebAPI.DTOs.ApplicationUserDTOs.CreateUserReq.EmailRequired" xml:space="preserve">
    <value>The Email is required.</value>
  </data>
    <data name="WebAPI.DTOs.ApplicationUserDTOs.CreateUserReq.EmailInvalid" xml:space="preserve">
    <value>The Email is not valid.</value>
  </data>
    <data name="WebAPI.DTOs.ApplicationUserDTOs.CreateUserReq.NameRequired" xml:space="preserve">
    <value>The Name is required.</value>
  </data>
    <data name="WebAPI.DTOs.ApplicationUserDTOs.CreateUserReq.NameStringLength" xml:space="preserve">
    <value>The Name must be {1} characters max.</value>
  </data>
    <data name="WebAPI.DTOs.ApplicationUserDTOs.CreateUserReq.LastNameRequired" xml:space="preserve">
    <value>The Last name is required.</value>
  </data>
    <data name="WebAPI.DTOs.ApplicationUserDTOs.CreateUserReq.LastNameStringLength" xml:space="preserve">
    <value>The Last name must be {1} characters max.</value>
  </data>
    <data name="WebAPI.DTOs.ApplicationUserDTOs.CreateUserReq.ConfirmEmailCallbackRequired" xml:space="preserve">
    <value>The ConfirmEmailCallback is required.</value>
  </data>
    <data name="WebAPI.DTOs.ApplicationUserDTOs.CreateUserReq.RolesRequired" xml:space="preserve">
    <value>The Roles are required.</value>
  </data>
    <!-- End CreateUserReq -->
    <!-- PasswordRecoveryReq -->
    <data name="WebAPI.DTOs.ApplicationUserDTOs.PasswordRecoveryReq.IdRequired" xml:space="preserve">
    <value>The Id is required.</value>
  </data>
    <data name="WebAPI.DTOs.ApplicationUserDTOs.PasswordRecoveryReq.RecoveryEmailCallbackRequired" xml:space="preserve">
    <value>The RecoveryEmailCallbackRequired is required.</value>
  </data>
    <!-- End PasswordRecoveryReq -->
    <!-- End ApplicationUserDTOs -->
    <!-- ProductDTOs -->
    <!-- FeatureDTO -->
    <data name="WebAPI.DTOs.ProductDTOs.FeatureDTO.NameRequired" xml:space="preserve">
    <value>The Name is required.</value>
  </data>
    <data name="WebAPI.DTOs.ProductDTOs.FeatureDTO.DescriptionRequired" xml:space="preserve">
    <value>The Description is required.</value>
  </data>
    <data name="WebAPI.DTOs.ProductDTOs.FeatureDTO.DescriptionStringLenth" xml:space="preserve">
    <value>The {0} must be at least {2} and at max {1} characters long.</value>
  </data>
    <!-- EndFeatureDTO -->
    <!-- ProductDTO -->
    <data name="WebAPI.DTOs.ProductDTOs.ProductDTO.NameRequired" xml:space="preserve">
    <value>The Name is required.</value>
  </data>
    <data name="WebAPI.DTOs.ProductDTOs.ProductDTO.DescriptionRequired" xml:space="preserve">
    <value>The Description is required.</value>
  </data>
    <data name="WebAPI.DTOs.ProductDTOs.ProductDTO.DescriptionStringLenth" xml:space="preserve">
    <value>The {0} must be at least {2} and at max {1} characters long.</value>
  </data>
    <data name="WebAPI.DTOs.ProductDTOs.ProductDTO.PriceRequired" xml:space="preserve">
    <value>The Price is required.</value>
  </data>
    <!-- End ProductDTO -->
    <!-- ProductEditorDTO -->
    <data name="WebAPI.DTOs.ProductDTOs.ProductEditorDTO.EditorIdRequired" xml:space="preserve">
    <value>The EditorId is required.</value>
  </data>
    <!-- End ProductEditorDTO -->
    <!-- End ProductDTOs -->
    <!-- CategoryDTOs -->
    <!-- CategoryDTO -->
    <data name="WebAPI.DTOs.CategoryDTOs.CategoryDTO.NameRequired" xml:space="preserve">
    <value>The Name is required.</value>
  </data>
    <data name="WebAPI.DTOs.CategoryDTOs.CategoryDTO.DescriptionRequired" xml:space="preserve">
    <value>The Description is required.</value>
  </data>
    <data name="WebAPI.DTOs.CategoryDTOs.CategoryDTO.DescriptionStringLenth" xml:space="preserve">
    <value>The {0} must be at least {2} and at max {1} characters long.</value>
  </data>
    <!-- End CategoryDTO -->
    <!-- End CategoryDTOs -->
    <!-- End Web API -->
    <!-- Web App -->
    <!-- Areas -->
    <!-- Identity -->
    <!-- Pages -->
    <!-- Account -->
    <!-- AccessDenied -->
    <data name="WebApp.Areas.Identity.Pages.Account.AccessDenied.Title" xml:space="preserve">
    <value>Access denied.</value>
  </data>
    <data name="WebApp.Areas.Identity.Pages.Account.AccessDenied.Description" xml:space="preserve">
    <value>You do not have access to this resource.</value>
  </data>
    <!-- End AccessDenied -->
    <!-- ConfirmEmail -->
    <data name="WebApp.Areas.Identity.Pages.Account.ConfirmEmail.Title" xml:space="preserve">
    <value>Confirm email.</value>
  </data>
    <data name="WebApp.Areas.Identity.Pages.Account.ConfirmEmail.Subtitle" xml:space="preserve">
    <value>Thank you for confirming your email.</value>
  </data>
    <data name="WebApp.Areas.Identity.Pages.Account.ConfirmEmail.BackToLogin" xml:space="preserve">
    <value>Back to Login</value>
  </data>
    <data name="WebApp.Areas.Identity.Pages.Account.ConfirmEmail.InvalidOperationException" xml:space="preserve">
    <value>Error confirming email for user with ID '{0}':</value>
  </data>
    <!-- End ConfirmEmail -->
    <!-- Create Password -->
    <data name="WebApp.Areas.Identity.Pages.Account.CreatePassword.Title" xml:space="preserve">
    <value>Create Password</value>
  </data>
    <data name="WebApp.Areas.Identity.Pages.Account.CreatePassword.PasswordLabel" xml:space="preserve">
    <value>Password</value>
  </data>
    <data name="WebApp.Areas.Identity.Pages.Account.CreatePassword.PasswordRequired" xml:space="preserve">
    <value>Password is required.</value>
  </data>
    <data name="WebApp.Areas.Identity.Pages.Account.CreatePassword.PasswordStringLength" xml:space="preserve">
    <value>The {0} must be at least {2} and at max {1} characters long.</value>
  </data>
    <data name="WebApp.Areas.Identity.Pages.Account.CreatePassword.ConfirmPasswordLabel" xml:space="preserve">
    <value>Confirm password</value>
  </data>
    <data name="WebApp.Areas.Identity.Pages.Account.CreatePassword.ConfirmPasswordCompare" xml:space="preserve">
    <value>The password and confirmation password do not match.</value>
  </data>
    <data name="WebApp.Areas.Identity.Pages.Account.CreatePassword.SubmitButton" xml:space="preserve">
    <value>Create</value>
  </data>
    <!-- End Create Password -->
    <!-- Create Password Confirmation -->
    <data name="WebApp.Areas.Identity.Pages.Account.CreatePasswordConfirmation.Title" xml:space="preserve">
    <value>Password Created</value>
  </data>
    <data name="WebApp.Areas.Identity.Pages.Account.CreatePasswordConfirmation.Subtitle" xml:space="preserve">
    <value>Thank you for creating a password.</value>
  </data>
    <data name="WebApp.Areas.Identity.Pages.Account.CreatePasswordConfirmation.BackToLogin" xml:space="preserve">
    <value>Back to Login</value>
  </data>
    <!-- End Create Password Confirmation -->
    <!-- External Login -->
    <data name="WebApp.Areas.Identity.Pages.Account.ExternalLogin.Title" xml:space="preserve">
    <value>Register</value>
  </data>
    <data name="WebApp.Areas.Identity.Pages.Account.ExternalLogin.Subtitle" xml:space="preserve">
    <value>Associate your {0} account.</value>
  </data>
    <data name="WebApp.Areas.Identity.Pages.Account.ExternalLogin.Info" xml:space="preserve">
    <value>You've successfully authenticated with {0}. Please enter an email address for this site below and click the Register button to finish logging in.</value>
  </data>
    <data name="WebApp.Areas.Identity.Pages.Account.ExternalLogin.EmailLabel" xml:space="preserve">
    <value>Email</value>
  </data>
    <data name="WebApp.Areas.Identity.Pages.Account.ExternalLogin.EmailRequired" xml:space="preserve">
    <value>Email is required</value>
  </data>
    <data name="WebApp.Areas.Identity.Pages.Account.ExternalLogin.EmailInvalid" xml:space="preserve">
    <value>Email is invalid</value>
  </data>
    <data name="WebApp.Areas.Identity.Pages.Account.ExternalLogin.ExternalProviderError" xml:space="preserve">
    <value>Error from external provider: {0}</value>
  </data>
    <data name="WebApp.Areas.Identity.Pages.Account.ExternalLogin.ExternalLoginErrorOnConfirmation" xml:space="preserve">
    <value>Error loading external login information during confirmation.</value>
  </data>
    <data name="WebApp.Areas.Identity.Pages.Account.ExternalLogin.ExternalLoginError" xml:space="preserve">
    <value>Error loading external login information.</value>
  </data>
    <data name="WebApp.Areas.Identity.Pages.Account.ExternalLogin.SubmitButton" xml:space="preserve">
    <value>Register</value>
  </data>
    <data name="WebApp.Areas.Identity.Pages.Account.ExternalLogin.NameRequired" xml:space="preserve">
    <value>Name is required</value>
  </data>
    <data name="WebApp.Areas.Identity.Pages.Account.ExternalLogin.LastNameRequired" xml:space="preserve">
    <value>Last name is required</value>
  </data>
    <data name="WebApp.Areas.Identity.Pages.Account.ExternalLogin.NameLabel" xml:space="preserve">
    <value>Name</value>
  </data>
    <data name="WebApp.Areas.Identity.Pages.Account.ExternalLogin.LastNameLabel" xml:space="preserve">
    <value>Last name</value>
  </data>
    <data name="WebApp.Areas.Identity.Pages.Account.ExternalLogin.AccountExistsMessage" xml:space="preserve">
    <value>An account with this email already exists. </value>
  </data>
    <data name="WebApp.Areas.Identity.Pages.Account.ExternalLogin.AccountExistsBtn" xml:space="preserve">
    <value>Associate</value>
  </data>
    <!-- End External Login -->
    <!-- Forgot Password -->
    <data name="WebApp.Areas.Identity.Pages.Account.ForgotPassword.Title" xml:space="preserve">
    <value>Recover your password</value>
  </data>
    <data name="WebApp.Areas.Identity.Pages.Account.ForgotPassword.Subtitle" xml:space="preserve">
    <value>Enter your email.</value>
  </data>
    <data name="WebApp.Areas.Identity.Pages.Account.ForgotPassword.EmailLabel" xml:space="preserve">
    <value>Email</value>
  </data>
    <data name="WebApp.Areas.Identity.Pages.Account.ForgotPassword.EmailRequired" xml:space="preserve">
    <value>Email is required</value>
  </data>
    <data name="WebApp.Areas.Identity.Pages.Account.ForgotPassword.EmailInvalid" xml:space="preserve">
    <value>Email is invalid</value>
  </data>
    <data name="WebApp.Areas.Identity.Pages.Account.ForgotPassword.SubmitButton" xml:space="preserve">
    <value>Recover</value>
  </data>
    <data name="WebApp.Areas.Identity.Pages.Account.ForgotPassword.BackToLogin" xml:space="preserve">
    <value>Back to Login</value>
  </data>
    <data name="WebApp.Areas.Identity.Pages.Account.ForgotPassword.SendEmailTitle" xml:space="preserve">
    <value>Forgot Password?</value>
  </data>
    <!-- End Forgot Password -->
    <!-- Forgot Password Confirmation -->
    <data name="WebApp.Areas.Identity.Pages.Account.ForgotPasswordConfirmation.Title" xml:space="preserve">
    <value>Forgot password confirmation</value>
  </data>
    <data name="WebApp.Areas.Identity.Pages.Account.ForgotPasswordConfirmation.Subtitle" xml:space="preserve">
    <value>If your user exists, you'll receive an email to reset your password.</value>
  </data>
    <data name="WebApp.Areas.Identity.Pages.Account.ForgotPasswordConfirmation.BackToLogin" xml:space="preserve">
    <value>Back to Login</value>
  </data>
    <!-- End Forgot Password Confirmation -->
    <!-- Lockout -->
    <data name="WebApp.Areas.Identity.Pages.Account.Lockout.Title" xml:space="preserve">
    <value>Locked out</value>
  </data>
    <data name="WebApp.Areas.Identity.Pages.Account.Lockout.Subtitle" xml:space="preserve">
    <value>This account has been locked out, please try again later.</value>
  </data>
    <!-- End Lockout -->
    <!-- Login -->
    <data name="WebApp.Areas.Identity.Pages.Account.Login.Title" xml:space="preserve">
    <value>Log in</value>
  </data>
    <data name="WebApp.Areas.Identity.Pages.Account.Login.RememberMe" xml:space="preserve">
    <value>Remember me</value>
  </data>
    <data name="WebApp.Areas.Identity.Pages.Account.Login.ForgotPassword" xml:space="preserve">
    <value>Forgot Password?</value>
  </data>
    <data name="WebApp.Areas.Identity.Pages.Account.Login.SubmitButton" xml:space="preserve">
    <value>Log In</value>
  </data>
    <data name="WebApp.Areas.Identity.Pages.Account.Login.NoAccount" xml:space="preserve">
    <value>Don't have an account?</value>
  </data>
    <data name="WebApp.Areas.Identity.Pages.Account.Login.SignUp" xml:space="preserve">
    <value>Sign Up</value>
  </data>
    <data name="WebApp.Areas.Identity.Pages.Account.Login.WithGoogle" xml:space="preserve">
    <value>Login with Google</value>
  </data>
    <data name="WebApp.Areas.Identity.Pages.Account.Login.WithFacebook" xml:space="preserve">
    <value>Login with Facebook</value>
  </data>
    <data name="WebApp.Areas.Identity.Pages.Account.Login.WithTwitter" xml:space="preserve">
    <value>Login with Twitter</value>
  </data>
    <data name="WebApp.Areas.Identity.Pages.Account.Login.WithAny" xml:space="preserve">
    <value>Login with {0}</value>
  </data>
    <data name="WebApp.Areas.Identity.Pages.Account.Login.EmailLabel" xml:space="preserve">
    <value>Email</value>
  </data>
    <data name="WebApp.Areas.Identity.Pages.Account.Login.EmailRequired" xml:space="preserve">
    <value>Email is required</value>
  </data>
    <data name="WebApp.Areas.Identity.Pages.Account.Login.EmailInvalid" xml:space="preserve">
    <value>Email is invalid</value>
  </data>
    <data name="WebApp.Areas.Identity.Pages.Account.Login.PasswordLabel" xml:space="preserve">
    <value>Password</value>
  </data>
    <data name="WebApp.Areas.Identity.Pages.Account.Login.PasswordRequired" xml:space="preserve">
    <value>Password is required</value>
  </data>
    <data name="WebApp.Areas.Identity.Pages.Account.Login.InvalidLoginAttempt" xml:space="preserve">
    <value>Invalid login attempt.</value>
  </data>
    <data name="WebApp.Areas.Identity.Pages.Account.Login.NotAllowedAttempt" xml:space="preserve">
    <value>You must confirm your account before proceed.</value>
  </data>
    <!-- End Login -->
    <!-- Login with 2FA -->
    <data name="WebApp.Areas.Identity.Pages.Account.LoginWith2FA.Title" xml:space="preserve">
    <value>Two-factor authentication</value>
  </data>
    <data name="WebApp.Areas.Identity.Pages.Account.LoginWith2FA.Subtitle" xml:space="preserve">
    <value>Your login is protected with an authenticator app. Enter your authenticator code below.</value>
  </data>
    <data name="WebApp.Areas.Identity.Pages.Account.LoginWith2FA.SubmitButton" xml:space="preserve">
    <value>Log in</value>
  </data>
    <data name="WebApp.Areas.Identity.Pages.Account.LoginWith2FA.LoginRecoveryCodeText" xml:space="preserve">
    <value>Don't have access to your authenticator device? You can</value>
  </data>
    <data name="WebApp.Areas.Identity.Pages.Account.LoginWith2FA.LoginRecoveryCodeButton" xml:space="preserve">
    <value>log in with a recovery code</value>
  </data>
    <data name="WebApp.Areas.Identity.Pages.Account.LoginWith2FA.TwoFactorCodeStringLength" xml:space="preserve">
    <value>The {0} must be at least {2} and at max {1} characters long.</value>
  </data>
    <data name="WebApp.Areas.Identity.Pages.Account.LoginWith2FA.TwoFactorCodeLabel" xml:space="preserve">
    <value>Authenticator code</value>
  </data>
    <data name="WebApp.Areas.Identity.Pages.Account.LoginWith2FA.TwoFactorCodeRequired" xml:space="preserve">
    <value>Authenticator code is required</value>
  </data>
    <data name="WebApp.Areas.Identity.Pages.Account.LoginWith2FA.RememberMachineLabel" xml:space="preserve">
    <value>Remember this machine</value>
  </data>
    <data name="WebApp.Areas.Identity.Pages.Account.LoginWith2FA.InvalidOperationException" xml:space="preserve">
    <value>Unable to load two-factor authentication user.</value>
  </data>
    <data name="WebApp.Areas.Identity.Pages.Account.LoginWith2FA.InvalidCode" xml:space="preserve">
    <value>Invalid authenticator code.</value>
  </data>
    <!-- End Login with 2FA -->
    <!-- Login with recovery code -->
    <data name="WebApp.Areas.Identity.Pages.Account.LoginWithRecoveryCode.Title" xml:space="preserve">
    <value>Recovery code verification</value>
  </data>
    <data name="WebApp.Areas.Identity.Pages.Account.LoginWithRecoveryCode.Subtitle" xml:space="preserve">
    <value>You have requested to log in with a recovery code. This login will not be remembered until you provide
    an authenticator app code at log in or disable 2FA and log in again.</value>
  </data>
    <data name="WebApp.Areas.Identity.Pages.Account.LoginWithRecoveryCode.SubmitButton" xml:space="preserve">
    <value>Log in</value>
  </data>
    <data name="WebApp.Areas.Identity.Pages.Account.LoginWithRecoveryCode.RecoveryCodeRequired" xml:space="preserve">
    <value>Recovery code is required</value>
  </data>
    <data name="WebApp.Areas.Identity.Pages.Account.LoginWithRecoveryCode.RecoveryCodeLabel" xml:space="preserve">
    <value>Recovery Code</value>
  </data>
    <data name="WebApp.Areas.Identity.Pages.Account.LoginWithRecoveryCode.InvalidOperationException" xml:space="preserve">
    <value>Unable to load two-factor authentication user.</value>
  </data>
    <data name="WebApp.Areas.Identity.Pages.Account.LoginWithRecoveryCode.InvalidCode" xml:space="preserve">
    <value>Invalid recovery code entered.</value>
  </data>
    <!-- End Login with recovery code -->
    <!-- Logout -->
    <data name="WebApp.Areas.Identity.Pages.Account.Logout.Title" xml:space="preserve">
    <value>Log out</value>
  </data>
    <data name="WebApp.Areas.Identity.Pages.Account.Logout.Subtitle" xml:space="preserve">
    <value>You have successfully logged out of the application.</value>
  </data>
    <!-- End Logout -->
    <!-- Register -->
    <data name="WebApp.Areas.Identity.Pages.Account.Register.Title" xml:space="preserve">
    <value>Register Now</value>
  </data>
    <data name="WebApp.Areas.Identity.Pages.Account.Register.Subtitle" xml:space="preserve">
    <value>Create a new account.</value>
  </data>
    <data name="WebApp.Areas.Identity.Pages.Account.Register.SubmitButton" xml:space="preserve">
    <value>Register</value>
  </data>
    <data name="WebApp.Areas.Identity.Pages.Account.Register.ExistingAccount" xml:space="preserve">
    <value>Already have an account?</value>
  </data>
    <data name="WebApp.Areas.Identity.Pages.Account.Register.LoginButton" xml:space="preserve">
    <value>Login</value>
  </data>
    <data name="WebApp.Areas.Identity.Pages.Account.Register.EmailRequired" xml:space="preserve">
    <value>Email is required</value>
  </data>
    <data name="WebApp.Areas.Identity.Pages.Account.Register.NameRequired" xml:space="preserve">
    <value>Name is required</value>
  </data>
    <data name="WebApp.Areas.Identity.Pages.Account.Register.LastNameRequired" xml:space="preserve">
    <value>Last name is required</value>
  </data>
    <data name="WebApp.Areas.Identity.Pages.Account.Register.PasswordRequired" xml:space="preserve">
    <value>Password is required</value>
  </data>
    <data name="WebApp.Areas.Identity.Pages.Account.Register.EmailInvalid" xml:space="preserve">
    <value>Email is invalid</value>
  </data>
    <data name="WebApp.Areas.Identity.Pages.Account.Register.EmailLabel" xml:space="preserve">
    <value>Email</value>
  </data>
    <data name="WebApp.Areas.Identity.Pages.Account.Register.NameLabel" xml:space="preserve">
    <value>Name</value>
  </data>
    <data name="WebApp.Areas.Identity.Pages.Account.Register.LastNameLabel" xml:space="preserve">
    <value>Last name</value>
  </data>
    <data name="WebApp.Areas.Identity.Pages.Account.Register.PasswordLabel" xml:space="preserve">
    <value>Password</value>
  </data>
    <data name="WebApp.Areas.Identity.Pages.Account.Register.ConfirmPasswordLabel" xml:space="preserve">
    <value>Confirm Password</value>
  </data>
    <data name="WebApp.Areas.Identity.Pages.Account.Register.NameStringLength" xml:space="preserve">
    <value>The Name must be {1} characters max.</value>
  </data>
    <data name="WebApp.Areas.Identity.Pages.Account.Register.LastNameStringLength" xml:space="preserve">
    <value>The Last name must be {1} characters max.</value>
  </data>
    <data name="WebApp.Areas.Identity.Pages.Account.Register.PasswordStringLength" xml:space="preserve">
    <value>The Password must be at least {2} and at max {1} characters long.</value>
  </data>
    <data name="WebApp.Areas.Identity.Pages.Account.Register.ConfirmPasswordCompare" xml:space="preserve">
    <value>The password and confirmation password do not match.</value>
  </data>
    <data name="WebApp.Areas.Identity.Pages.Account.Register.ConfirmationEmailTitle" xml:space="preserve">
    <value>Confirm your email</value>
  </data>
    <data name="WebApp.Areas.Identity.Pages.Account.Register.PasswordRequirements" xml:space="preserve">
    <value>The password requires at least 6 characters, one digit, one uppercase letter and one symbol</value>
  </data>
    <!-- End Register -->
    <!-- Reset Password -->
    <data name="WebApp.Areas.Identity.Pages.Account.ResetPassword.Title" xml:space="preserve">
    <value>Reset password</value>
  </data>
    <data name="WebApp.Areas.Identity.Pages.Account.ResetPassword.Subtitle" xml:space="preserve">
    <value>Reset your password.</value>
  </data>
    <data name="WebApp.Areas.Identity.Pages.Account.ResetPassword.SubmitButton" xml:space="preserve">
    <value>Reset</value>
  </data>
    <data name="WebApp.Areas.Identity.Pages.Account.ResetPassword.EmailRequired" xml:space="preserve">
    <value>Email is required</value>
  </data>
    <data name="WebApp.Areas.Identity.Pages.Account.ResetPassword.PasswordRequired" xml:space="preserve">
    <value>Password is required</value>
  </data>
    <data name="WebApp.Areas.Identity.Pages.Account.ResetPassword.EmailInvalid" xml:space="preserve">
    <value>Email is invalid</value>
  </data>
    <data name="WebApp.Areas.Identity.Pages.Account.ResetPassword.PasswordStringLength" xml:space="preserve">
    <value>The Password must be at least {2} and at max {1} characters long.</value>
  </data>
    <data name="WebApp.Areas.Identity.Pages.Account.ResetPassword.EmailLabel" xml:space="preserve">
    <value>Email</value>
  </data>
    <data name="WebApp.Areas.Identity.Pages.Account.ResetPassword.PasswordLabel" xml:space="preserve">
    <value>Password</value>
  </data>
    <data name="WebApp.Areas.Identity.Pages.Account.ResetPassword.ConfirmPasswordLabel" xml:space="preserve">
    <value>Confirm Password</value>
  </data>
    <data name="WebApp.Areas.Identity.Pages.Account.ResetPassword.CodeLabel" xml:space="preserve">
    <value>Code</value>
  </data>
    <data name="WebApp.Areas.Identity.Pages.Account.ResetPassword.ConfirmPasswordCompare" xml:space="preserve">
    <value>The password and confirmation password do not match.</value>
  </data>
    <!-- End Reset Password -->
    <!-- Reset Password Confirmation -->
    <data name="WebApp.Areas.Identity.Pages.Account.ResetPasswordConfirmation.Title" xml:space="preserve">
    <value>Reset password confirmation</value>
  </data>
    <data name="WebApp.Areas.Identity.Pages.Account.ResetPasswordConfirmation.SubtitleText" xml:space="preserve">
    <value>Your password has been reset. Please</value>
  </data>
    <data name="WebApp.Areas.Identity.Pages.Account.ResetPasswordConfirmation.SubtitleButton" xml:space="preserve">
    <value>click here to log in</value>
  </data>
    <!-- End Reset Password Confirmation -->
    <!-- Manage -->
    <data name="WebApp.Areas.Identity.Pages.Account.Manage.Title" xml:space="preserve">
    <value>Manage your account</value>
  </data>
    <data name="WebApp.Areas.Identity.Pages.Account.Manage.Subtitle" xml:space="preserve">
    <value>Change your account settings</value>
  </data>
    <!-- End Manage -->
    <!-- ManageNav -->
    <data name="WebApp.Areas.Identity.Pages.Account.ManageNav.Profile" xml:space="preserve">
    <value>Profile</value>
  </data>
    <data name="WebApp.Areas.Identity.Pages.Account.ManageNav.ChangePassword" xml:space="preserve">
    <value>Change Password</value>
  </data>
    <data name="WebApp.Areas.Identity.Pages.Account.ManageNav.ExternalLogin" xml:space="preserve">
    <value>External logins</value>
  </data>
    <data name="WebApp.Areas.Identity.Pages.Account.ManageNav.TwoFA" xml:space="preserve">
    <value>Two-factor authentication</value>
  </data>
    <!-- End ManageNav -->
    <!-- Profile -->
    <data name="WebApp.Areas.Identity.Pages.Account.Profile.Title" xml:space="preserve">
    <value>Profile</value>
  </data>
    <data name="WebApp.Areas.Identity.Pages.Account.Profile.SendVerificationEmail" xml:space="preserve">
    <value>Send verification email</value>
  </data>
    <data name="WebApp.Areas.Identity.Pages.Account.Profile.SubmitButton" xml:space="preserve">
    <value>Save</value>
  </data>
    <data name="WebApp.Areas.Identity.Pages.Account.Profile.UsernameLabel" xml:space="preserve">
    <value>Username</value>
  </data>
    <data name="WebApp.Areas.Identity.Pages.Account.Profile.EmailLabel" xml:space="preserve">
    <value>Email</value>
  </data>
    <data name="WebApp.Areas.Identity.Pages.Account.Profile.NameLabel" xml:space="preserve">
    <value>Name</value>
  </data>
    <data name="WebApp.Areas.Identity.Pages.Account.Profile.LastNameLabel" xml:space="preserve">
    <value>Last name</value>
  </data>
    <data name="WebApp.Areas.Identity.Pages.Account.Profile.PhoneNumberLabel" xml:space="preserve">
    <value>Phone Number</value>
  </data>
    <data name="WebApp.Areas.Identity.Pages.Account.Profile.EmailRequired" xml:space="preserve">
    <value>Email is required</value>
  </data>
    <data name="WebApp.Areas.Identity.Pages.Account.Profile.NameRequired" xml:space="preserve">
    <value>Name is required</value>
  </data>
    <data name="WebApp.Areas.Identity.Pages.Account.Profile.LastNameRequired" xml:space="preserve">
    <value>Last name is required</value>
  </data>
    <data name="WebApp.Areas.Identity.Pages.Account.Profile.NameStringLength" xml:space="preserve">
    <value>The Name must be {1} characters max.</value>
  </data>
    <data name="WebApp.Areas.Identity.Pages.Account.Profile.LastNameStringLength" xml:space="preserve">
    <value>The Last name must be {1} characters max.</value>
  </data>
    <data name="WebApp.Areas.Identity.Pages.Account.Profile.CannotLoadUser" xml:space="preserve">
    <value>Unable to load user with ID {0}.</value>
  </data>
    <data name="WebApp.Areas.Identity.Pages.Account.Profile.ErrorSettingEmail" xml:space="preserve">
    <value>Unexpected error occurred setting email for user with ID {0}.</value>
  </data>
    <data name="WebApp.Areas.Identity.Pages.Account.Profile.ErrorSettingPhone" xml:space="preserve">
    <value>Unexpected error occurred setting phone number for user with ID {0}.</value>
  </data>
    <data name="WebApp.Areas.Identity.Pages.Account.Profile.Updated" xml:space="preserve">
    <value>Your profile has been updated</value>
  </data>
    <data name="WebApp.Areas.Identity.Pages.Account.Profile.VerificationEmailTitle" xml:space="preserve">
    <value>Confirm your email</value>
  </data>
    <data name="WebApp.Areas.Identity.Pages.Account.Profile.VerificationEmailBody" xml:space="preserve">
    <value>Please confirm your account by {0}</value>
  </data>
    <data name="WebApp.Areas.Identity.Pages.Account.Profile.EmailSent" xml:space="preserve">
    <value>Verification email sent. Please check your email.</value>
  </data>
    <data name="WebApp.Areas.Identity.Pages.Account.Profile.PhoneNumberInvalid" xml:space="preserve">
    <value>Phone number is not valid</value>
  </data>
    <data name="WebApp.Areas.Identity.Pages.Account.Profile.ClickHere" xml:space="preserve">
    <value>clicking here</value>
  </data>
    <data name="WebApp.Areas.Identity.Pages.Account.Profile.PhotoLabel" xml:space="preserve">
    <value>Photo</value>
  </data>
    <!-- End Profile -->
    <!-- Change Password -->
    <data name="WebApp.Areas.Identity.Pages.Account.ChangePassword.Title" xml:space="preserve">
    <value>Change Password</value>
  </data>
    <data name="WebApp.Areas.Identity.Pages.Account.ChangePassword.SubmitButton" xml:space="preserve">
    <value>Update password</value>
  </data>
    <data name="WebApp.Areas.Identity.Pages.Account.ChangePassword.OldPasswordRequired" xml:space="preserve">
    <value>Old password is required</value>
  </data>
    <data name="WebApp.Areas.Identity.Pages.Account.ChangePassword.NewPasswordRequired" xml:space="preserve">
    <value>New password is required</value>
  </data>
    <data name="WebApp.Areas.Identity.Pages.Account.ChangePassword.OldPasswordLabel" xml:space="preserve">
    <value>Old password</value>
  </data>
    <data name="WebApp.Areas.Identity.Pages.Account.ChangePassword.NewPasswordLabel" xml:space="preserve">
    <value>New password</value>
  </data>
    <data name="WebApp.Areas.Identity.Pages.Account.ChangePassword.ConfirmNewPasswordLabel" xml:space="preserve">
    <value>Confirm new password</value>
  </data>
    <data name="WebApp.Areas.Identity.Pages.Account.ChangePassword.NewPasswordStringLength" xml:space="preserve">
    <value>The new password must be at least {2} and at max {1} characters long.</value>
  </data>
    <data name="WebApp.Areas.Identity.Pages.Account.ChangePassword.ConfirmPasswordCompare" xml:space="preserve">
    <value>The new password and confirmation password do not match.</value>
  </data>
    <data name="WebApp.Areas.Identity.Pages.Account.ChangePassword.CannotLoadUser" xml:space="preserve">
    <value>Unable to load user.</value>
  </data>
    <data name="WebApp.Areas.Identity.Pages.Account.ChangePassword.PasswordChanged" xml:space="preserve">
    <value>Your password has been changed.</value>
  </data>
    <!-- End Change Password -->
    <!-- Reset Authenticator -->
    <data name="WebApp.Areas.Identity.Pages.Account.ResetAuthenticator.Title" xml:space="preserve">
    <value>Reset authenticator key</value>
  </data>
    <data name="WebApp.Areas.Identity.Pages.Account.ResetAuthenticator.ParagraphOne" xml:space="preserve">
    <value>If you reset your authenticator key your authenticator app will not work until you reconfigure it.</value>
  </data>
    <data name="WebApp.Areas.Identity.Pages.Account.ResetAuthenticator.ParagraphTwo" xml:space="preserve">
    <value>This process disables 2FA until you verify your authenticator app.
        If you do not complete your authenticator app configuration you may lose access to your account.</value>
  </data>
    <data name="WebApp.Areas.Identity.Pages.Account.ResetAuthenticator.SubmitButton" xml:space="preserve">
    <value>Reset authenticator key</value>
  </data>
    <data name="WebApp.Areas.Identity.Pages.Account.ResetAuthenticator.CannotLoadUser" xml:space="preserve">
    <value>Unable to load user with ID {0}.</value>
  </data>
    <data name="WebApp.Areas.Identity.Pages.Account.ResetAuthenticator.KeyResetSuccess" xml:space="preserve">
    <value>Your authenticator app key has been reset, you will need to configure your authenticator app using the new key.</value>
  </data>
    <!-- End Reset Authenticator -->
    <!-- Delete Personal Data -->
    <data name="WebApp.Areas.Identity.Pages.Account.DeletePersonalData.Title" xml:space="preserve">
    <value>Delete Personal Data</value>
  </data>
    <data name="WebApp.Areas.Identity.Pages.Account.DeletePersonalData.Subtitle" xml:space="preserve">
    <value>Deleting this data will permanently remove your account, and this cannot be recovered.</value>
  </data>
    <data name="WebApp.Areas.Identity.Pages.Account.DeletePersonalData.SubmitButton" xml:space="preserve">
    <value>Delete data and close my account</value>
  </data>
    <data name="WebApp.Areas.Identity.Pages.Account.DeletePersonalData.PasswordRequired" xml:space="preserve">
    <value>Password is required</value>
  </data>
    <data name="WebApp.Areas.Identity.Pages.Account.DeletePersonalData.CannotLoadUser" xml:space="preserve">
    <value>Unable to load user with ID {0}.</value>
  </data>
    <data name="WebApp.Areas.Identity.Pages.Account.DeletePersonalData.PasswordNotCorrect" xml:space="preserve">
    <value>Password not correct.</value>
  </data>
    <data name="WebApp.Areas.Identity.Pages.Account.DeletePersonalData.InvalidOperationException" xml:space="preserve">
    <value>Unexpected error occurred deleteing user with ID {0}.</value>
  </data>
    <data name="WebApp.Areas.Identity.Pages.Account.DeletePersonalData.PasswordLabel" xml:space="preserve">
    <value>Password</value>
  </data>
    <!-- End Delete Personal Data -->
    <!-- Disable 2FA -->
    <data name="WebApp.Areas.Identity.Pages.Account.DisableTwoFA.Title" xml:space="preserve">
    <value>Disable two-factor authentication (2FA)</value>
  </data>
    <data name="WebApp.Areas.Identity.Pages.Account.DisableTwoFA.ParagraphOne" xml:space="preserve">
    <value>This action only disables 2FA.</value>
  </data>
    <data name="WebApp.Areas.Identity.Pages.Account.DisableTwoFA.ParagraphTwo" xml:space="preserve">
    <value>Disabling 2FA does not change the keys used in authenticator apps. If you wish to change the key
        used in an authenticator app you should</value>
  </data>
    <data name="WebApp.Areas.Identity.Pages.Account.DisableTwoFA.ParagraphTwoButton" xml:space="preserve">
    <value>reset your authenticator keys.</value>
  </data>
    <data name="WebApp.Areas.Identity.Pages.Account.DisableTwoFA.SubmitButton" xml:space="preserve">
    <value>Disable 2FA</value>
  </data>
    <data name="WebApp.Areas.Identity.Pages.Account.DisableTwoFA.CannotLoadUser" xml:space="preserve">
    <value>Unable to load user with ID {0}.</value>
  </data>
    <data name="WebApp.Areas.Identity.Pages.Account.DisableTwoFA.CannotDisable2FA" xml:space="preserve">
    <value>Cannot disable 2FA for user with ID {0} as it's not currently enabled.</value>
  </data>
    <data name="WebApp.Areas.Identity.Pages.Account.DisableTwoFA.InvalidOperationException" xml:space="preserve">
    <value>Unexpected error occurred disabling 2FA for user with ID {0}.</value>
  </data>
    <data name="WebApp.Areas.Identity.Pages.Account.DisableTwoFA.TwoFADisabled" xml:space="preserve">
    <value>2fa has been disabled. You can reenable 2fa when you setup an authenticator app</value>
  </data>
    <!-- End Disable 2FA -->
    <!-- Download Your data -->
    <data name="WebApp.Areas.Identity.Pages.Account.DownloadYourData.Title" xml:space="preserve">
    <value>Download Your Data</value>
  </data>
    <data name="WebApp.Areas.Identity.Pages.Account.DownloadYourData.CannotLoadUser" xml:space="preserve">
    <value>Unable to load user with ID {0}.</value>
  </data>
    <!-- End Download Your data -->
    <!-- Enable Authenticator -->
    <data name="WebApp.Areas.Identity.Pages.Account.EnableAuthenticator.Title" xml:space="preserve">
    <value>Configure authenticator app</value>
  </data>
    <data name="WebApp.Areas.Identity.Pages.Account.EnableAuthenticator.Subtitle" xml:space="preserve">
    <value>To use an authenticator app go through the following steps:</value>
  </data>
    <data name="WebApp.Areas.Identity.Pages.Account.EnableAuthenticator.ParagraphOne" xml:space="preserve">
    <value>Download a two-factor authenticator app like Microsoft Authenticator for</value>
  </data>
    <data name="WebApp.Areas.Identity.Pages.Account.EnableAuthenticator.And" xml:space="preserve">
    <value>And</value>
  </data>
    <data name="WebApp.Areas.Identity.Pages.Account.EnableAuthenticator.Or" xml:space="preserve">
    <value>Or Google Authenticator for</value>
  </data>
    <data name="WebApp.Areas.Identity.Pages.Account.EnableAuthenticator.ScanCodeFirst" xml:space="preserve">
    <value>Scan the QR Code or enter this key</value>
  </data>
    <data name="WebApp.Areas.Identity.Pages.Account.EnableAuthenticator.ScanCodeSecond" xml:space="preserve">
    <value> into your two factor authenticator app. Spaces and casing do not matter.</value>
  </data>
    <data name="WebApp.Areas.Identity.Pages.Account.EnableAuthenticator.Enable" xml:space="preserve">
    <value>To enable QR code generation please read our</value>
  </data>
    <data name="WebApp.Areas.Identity.Pages.Account.EnableAuthenticator.EnableButton" xml:space="preserve">
    <value>documentation</value>
  </data>
    <data name="WebApp.Areas.Identity.Pages.Account.EnableAuthenticator.EnterTheCode" xml:space="preserve">
    <value>Once you have scanned the QR code or input the key above, your two factor authentication app will provide you
                with a unique code. Enter the code in the confirmation box below.</value>
  </data>
    <data name="WebApp.Areas.Identity.Pages.Account.EnableAuthenticator.VerificationCode" xml:space="preserve">
    <value>Verification Code</value>
  </data>
    <data name="WebApp.Areas.Identity.Pages.Account.EnableAuthenticator.SubmitButton" xml:space="preserve">
    <value>Verify</value>
  </data>
    <data name="WebApp.Areas.Identity.Pages.Account.EnableAuthenticator.CodeRequired" xml:space="preserve">
    <value>Code is required</value>
  </data>
    <data name="WebApp.Areas.Identity.Pages.Account.EnableAuthenticator.CodeStringLength" xml:space="preserve">
    <value>The {0} must be at least {2} and at max {1} characters long.</value>
  </data>
    <data name="WebApp.Areas.Identity.Pages.Account.EnableAuthenticator.CodeLabel" xml:space="preserve">
    <value>Verification Code</value>
  </data>
    <data name="WebApp.Areas.Identity.Pages.Account.EnableAuthenticator.CannotLoadUser" xml:space="preserve">
    <value>Unable to load user with ID {0}.</value>
  </data>
    <data name="WebApp.Areas.Identity.Pages.Account.EnableAuthenticator.InvalidCode" xml:space="preserve">
    <value>Verification code is invalid.</value>
  </data>
    <data name="WebApp.Areas.Identity.Pages.Account.EnableAuthenticator.AuthenticatorVerified" xml:space="preserve">
    <value>Your authenticator app has been verified.</value>
  </data>
    <!-- End Enable Authenticator -->
    <!-- External Logins -->
    <data name="WebApp.Areas.Identity.Pages.Account.ExternalLogins.Title" xml:space="preserve">
    <value>Manage your external logins</value>
  </data>
    <data name="WebApp.Areas.Identity.Pages.Account.ExternalLogins.Subtitle" xml:space="preserve">
    <value>Registered Logins</value>
  </data>
    <data name="WebApp.Areas.Identity.Pages.Account.ExternalLogins.SubmitButton" xml:space="preserve">
    <value>Remove</value>
  </data>
    <data name="WebApp.Areas.Identity.Pages.Account.ExternalLogins.AddAnotherService" xml:space="preserve">
    <value>Add another service to log in.</value>
  </data>
    <data name="WebApp.Areas.Identity.Pages.Account.ExternalLogins.CannotLoadUser" xml:space="preserve">
    <value>Unable to load user with ID {0}.</value>
  </data>
    <data name="WebApp.Areas.Identity.Pages.Account.ExternalLogins.ErrorRemovingExternalService" xml:space="preserve">
    <value>Unexpected error occurred removing external login for user with ID {0}.</value>
  </data>
    <data name="WebApp.Areas.Identity.Pages.Account.ExternalLogins.ExternalLoginRemoved" xml:space="preserve">
    <value>The external login was removed.</value>
  </data>
    <data name="WebApp.Areas.Identity.Pages.Account.ExternalLogins.ErrorLoadingExternalService" xml:space="preserve">
    <value>Unexpected error occurred loading external login info for user with ID {}.</value>
  </data>
    <data name="WebApp.Areas.Identity.Pages.Account.ExternalLogins.ErrorAddingExternalService" xml:space="preserve">
    <value>Unexpected error occurred adding external login for user with ID {0}.</value>
  </data>
    <data name="WebApp.Areas.Identity.Pages.Account.ExternalLogins.ExternalLoginAdded" xml:space="preserve">
    <value>The external login was added.</value>
  </data>
    <data name="WebApp.Areas.Identity.Pages.Account.ExternalLogins.WithGoogle" xml:space="preserve">
    <value>Login with Google</value>
  </data>
    <data name="WebApp.Areas.Identity.Pages.Account.ExternalLogins.WithFacebook" xml:space="preserve">
    <value>Login with Facebook</value>
  </data>
    <data name="WebApp.Areas.Identity.Pages.Account.ExternalLogins.WithTwitter" xml:space="preserve">
    <value>Login with Twitter</value>
  </data>
    <!-- End External Logins -->
    <!-- Generate Recovery Codes -->
    <data name="WebApp.Areas.Identity.Pages.Account.GenerateRecoveryCodes.Title" xml:space="preserve">
    <value>Generate two-factor authentication (2FA) recovery codes</value>
  </data>
    <data name="WebApp.Areas.Identity.Pages.Account.GenerateRecoveryCodes.ParagraphOne" xml:space="preserve">
    <value>Put these codes in a safe place.</value>
  </data>
    <data name="WebApp.Areas.Identity.Pages.Account.GenerateRecoveryCodes.ParagraphTwo" xml:space="preserve">
    <value>If you lose your device and don't have the recovery codes you will lose access to your account.</value>
  </data>
    <data name="WebApp.Areas.Identity.Pages.Account.GenerateRecoveryCodes.ParagraphThree" xml:space="preserve">
    <value>Generating new recovery codes does not change the keys used in authenticator apps. If you wish to change the key
        used in an authenticator app you should</value>
  </data>
    <data name="WebApp.Areas.Identity.Pages.Account.GenerateRecoveryCodes.ParagraphThreeButton" xml:space="preserve">
    <value>reset your authenticator keys.</value>
  </data>
    <data name="WebApp.Areas.Identity.Pages.Account.GenerateRecoveryCodes.SubmitButton" xml:space="preserve">
    <value>Generate Recovery Codes</value>
  </data>
    <data name="WebApp.Areas.Identity.Pages.Account.GenerateRecoveryCodes.CannotLoadUser" xml:space="preserve">
    <value>Unable to load user with ID {0}.</value>
  </data>
    <data name="WebApp.Areas.Identity.Pages.Account.GenerateRecoveryCodes.ErrorTwoFADisabled" xml:space="preserve">
    <value>Cannot generate recovery codes for user with ID {0} because they do not have 2FA enabled.</value>
  </data>
    <data name="WebApp.Areas.Identity.Pages.Account.GenerateRecoveryCodes.NewCodesGenerated" xml:space="preserve">
    <value>You have generated new recovery codes.</value>
  </data>
    <!-- End Generate Recovery Codes -->
    <!-- Set Password -->
    <data name="WebApp.Areas.Identity.Pages.Account.SetPassword.Title" xml:space="preserve">
    <value>Set password</value>
  </data>
    <data name="WebApp.Areas.Identity.Pages.Account.SetPassword.Subtitle" xml:space="preserve">
    <value>Set your password</value>
  </data>
    <data name="WebApp.Areas.Identity.Pages.Account.SetPassword.ParagraphOne" xml:space="preserve">
    <value>You do not have a local username/password for this site. Add a local
    account so you can log in without an external login.</value>
  </data>
    <data name="WebApp.Areas.Identity.Pages.Account.SetPassword.SubmitButton" xml:space="preserve">
    <value>Set password</value>
  </data>
    <data name="WebApp.Areas.Identity.Pages.Account.SetPassword.NewPasswordRequired" xml:space="preserve">
    <value>New password is required</value>
  </data>
    <data name="WebApp.Areas.Identity.Pages.Account.SetPassword.NewPasswordStringLength" xml:space="preserve">
    <value>The {0} must be at least {2} and at max {1} characters long.</value>
  </data>
    <data name="WebApp.Areas.Identity.Pages.Account.SetPassword.NewPasswordLabel" xml:space="preserve">
    <value>New Password</value>
  </data>
    <data name="WebApp.Areas.Identity.Pages.Account.SetPassword.ConfirmPasswordLabel" xml:space="preserve">
    <value>Confirm new password</value>
  </data>
    <data name="WebApp.Areas.Identity.Pages.Account.SetPassword.ConfirmPasswordCompare" xml:space="preserve">
    <value>The new password and confirmation password do not match.</value>
  </data>
    <data name="WebApp.Areas.Identity.Pages.Account.SetPassword.CannotLoadUser" xml:space="preserve">
    <value>Unable to load user.</value>
  </data>
    <data name="WebApp.Areas.Identity.Pages.Account.SetPassword.PasswordSet" xml:space="preserve">
    <value>Your password has been set.</value>
  </data>
    <!-- End Set Password -->
    <!-- Show Recovery Codes -->
    <data name="WebApp.Areas.Identity.Pages.Account.ShowRecoveryCodes.Title" xml:space="preserve">
    <value>Recovery codes</value>
  </data>
    <data name="WebApp.Areas.Identity.Pages.Account.ShowRecoveryCodes.ParagraphOne" xml:space="preserve">
    <value>Put these codes in a safe place.</value>
  </data>
    <data name="WebApp.Areas.Identity.Pages.Account.ShowRecoveryCodes.ParagraphTwo" xml:space="preserve">
    <value>If you lose your device and don't have the recovery codes you will lose access to your account.</value>
  </data>
    <!-- End Show Recovery Codes -->
    <!-- Two Factor Authentication -->
    <data name="WebApp.Areas.Identity.Pages.Account.TwoFactorAuthentication.Title" xml:space="preserve">
    <value>Two-factor authentication (2FA)</value>
  </data>
    <data name="WebApp.Areas.Identity.Pages.Account.TwoFactorAuthentication.NoRecoveryCodesLeft" xml:space="preserve">
    <value>You have no recovery codes left.</value>
  </data>
    <data name="WebApp.Areas.Identity.Pages.Account.TwoFactorAuthentication.NoRecoveryCodesLeftDescription" xml:space="preserve">
    <value>You must</value>
  </data>
    <data name="WebApp.Areas.Identity.Pages.Account.TwoFactorAuthentication.RecoveryCodesLeftButton" xml:space="preserve">
    <value>generate a new set of recovery codes</value>
  </data>
    <data name="WebApp.Areas.Identity.Pages.Account.TwoFactorAuthentication.OneRecoveryCodeLeft" xml:space="preserve">
    <value>You have 1 recovery code left.</value>
  </data>
    <data name="WebApp.Areas.Identity.Pages.Account.TwoFactorAuthentication.RecoveryCodesLeft" xml:space="preserve">
    <value>You have {0} recovery codes left.</value>
  </data>
    <data name="WebApp.Areas.Identity.Pages.Account.TwoFactorAuthentication.RecoveryCodesLeftDescription" xml:space="preserve">
    <value>You can</value>
  </data>
    <data name="WebApp.Areas.Identity.Pages.Account.TwoFactorAuthentication.ForgetBrowser" xml:space="preserve">
    <value>Forget this browser</value>
  </data>
    <data name="WebApp.Areas.Identity.Pages.Account.TwoFactorAuthentication.DisableTwoFA" xml:space="preserve">
    <value>Disable 2FA</value>
  </data>
    <data name="WebApp.Areas.Identity.Pages.Account.TwoFactorAuthentication.ResetRecoveryCodes" xml:space="preserve">
    <value>Reset recovery codes</value>
  </data>
    <data name="WebApp.Areas.Identity.Pages.Account.TwoFactorAuthentication.SecondSubtitle" xml:space="preserve">
    <value>Authenticator app</value>
  </data>
    <data name="WebApp.Areas.Identity.Pages.Account.TwoFactorAuthentication.AddApp" xml:space="preserve">
    <value>Add authenticator app</value>
  </data>
    <data name="WebApp.Areas.Identity.Pages.Account.TwoFactorAuthentication.SetupApp" xml:space="preserve">
    <value>Setup authenticator app</value>
  </data>
    <data name="WebApp.Areas.Identity.Pages.Account.TwoFactorAuthentication.ResetApp" xml:space="preserve">
    <value>Reset authenticator app</value>
  </data>
    <data name="WebApp.Areas.Identity.Pages.Account.TwoFactorAuthentication.CannotLoadUser" xml:space="preserve">
    <value>Unable to load user with ID {0}.</value>
  </data>
    <data name="WebApp.Areas.Identity.Pages.Account.TwoFactorAuthentication.BrowserForgotten" xml:space="preserve">
    <value>The current browser has been forgotten. When you login again from this browser you will be prompted for your 2fa code.</value>
  </data>
    <!-- End Two Factor Authentication -->
    <!-- Register Confirmation -->
    <data name="WebApp.Areas.Identity.Pages.Account.RegisterConfirmation.Title" xml:space="preserve">
    <value>Register confirmation</value>
  </data>
    <data name="WebApp.Areas.Identity.Pages.Account.RegisterConfirmation.Subtitle" xml:space="preserve">
    <value>You'll receive an email with a link to confirm your account</value>
  </data>
    <data name="WebApp.Areas.Identity.Pages.Account.RegisterConfirmation.BackToLogin" xml:space="preserve">
    <value>Back to Login</value>
  </data>
    <!-- End Register Confirmation -->
    <!-- End Account -->
    <!-- End Pages -->
    <!-- Errors -->
    <data name="WebApp.Areas.Identity.Errors.EmailTaken" xml:space="preserve">
    <value>Email {0} is already taken.</value>
  </data>
    <data name="WebApp.Areas.Identity.Errors.UsernameTaken" xml:space="preserve">
    <value>User name {0} is already taken.</value>
  </data>
    <!-- End Errors -->
    <!-- End Identity -->
    <!-- End Areas -->
    <!-- Controllers -->
    <!-- CategoryController -->
    <data name="WebApp.Controllers.CategoryController.IndexTitle" xml:space="preserve">
    <value>Categories</value>
  </data>
    <data name="WebApp.Controllers.CategoryController.CreateTitle" xml:space="preserve">
    <value>Create new category</value>
  </data>
    <data name="WebApp.Controllers.CategoryController.EditTitle" xml:space="preserve">
    <value>Edit category</value>
  </data>
    <data name="WebApp.Controllers.CategoryController.DetailsTitle" xml:space="preserve">
    <value>Category details</value>
  </data>
    <data name="WebApp.Controllers.CategoryController.DeleteSuccess" xml:space="preserve">
    <value>Category successfully deleted</value>
  </data>
    <data name="WebApp.Controllers.CategoryController.DeleteUnexpectedError" xml:space="preserve">
    <value>An unexpected error ocurred</value>
  </data>
    <!-- End CategoryController -->
    <!-- GeneroController -->
    <data name="WebApp.Controllers.GeneroController.IndexTitle" xml:space="preserve">
    <value>Genres</value>
  </data>
    <data name="WebApp.Controllers.GeneroController.CreateTitle" xml:space="preserve">
    <value>Create new genre</value>
  </data>
    <data name="WebApp.Controllers.GeneroController.EditTitle" xml:space="preserve">
    <value>Edit genre</value>
  </data>
    <data name="WebApp.Controllers.GeneroController.DetailsTitle" xml:space="preserve">
    <value>Genre details</value>
  </data>
    <data name="WebApp.Controllers.GeneroController.DeleteSuccess" xml:space="preserve">
    <value>Genre successfully deleted</value>
  </data>
    <data name="WebApp.Controllers.GeneroController.DeleteUnexpectedError" xml:space="preserve">
    <value>An unexpected error ocurred</value>
  </data>
    <!-- End GeneroController -->
    <!-- ChartsController -->
    <data name="WebApp.Controllers.ChartsController.IndexTitle" xml:space="preserve">
    <value>Charts</value>
  </data>
    <data name="WebApp.Controllers.ChartsController.RadarFirstDatasetTitle" xml:space="preserve">
    <value>First dataset</value>
  </data>
    <data name="WebApp.Controllers.ChartsController.RadarSecondDatasetTitle" xml:space="preserve">
    <value>Second dataset</value>
  </data>
    <!-- End ChartsController -->
    <!-- HomeController -->
    <data name="WebApp.Controllers.HomeController.IndexTitle" xml:space="preserve">
    <value>Welcome to Binit Ignite</value>
  </data>
    <data name="WebApp.Controllers.HomeController.PrivacyTitle" xml:space="preserve">
    <value>Privacy Policy</value>
  </data>
    <!-- End HomeController -->
    <!-- ProductController -->
    <data name="WebApp.Controllers.ProductController.IndexTitle" xml:space="preserve">
    <value>Products</value>
  </data>
    <data name="WebApp.Controllers.ProductController.CreateTitle" xml:space="preserve">
    <value>Create new product</value>
  </data>
    <data name="WebApp.Controllers.ProductController.EditTitle" xml:space="preserve">
    <value>Edit product</value>
  </data>
    <data name="WebApp.Controllers.ProductController.DetailsTitle" xml:space="preserve">
    <value>Product details</value>
  </data>
    <data name="WebApp.Controllers.ProductController.DeleteSuccess" xml:space="preserve">
    <value>Product successfully deleted</value>
  </data>
    <data name="WebApp.Controllers.ProductController.DeleteUnexpectedError" xml:space="preserve">
    <value>An unexpected error ocurred</value>
  </data>
    <!-- End ProductController -->
    <!-- QuestionController -->
    <data name="WebApp.Controllers.QuestionController.IndexTitle" xml:space="preserve">
    <value>Questions</value>
  </data>
    <data name="WebApp.Controllers.QuestionController.CreateTitle" xml:space="preserve">
    <value>Create new Question</value>
  </data>
    <data name="WebApp.Controllers.QuestionController.EditTitle" xml:space="preserve">
    <value>Edit Question</value>
  </data>
    <data name="WebApp.Controllers.QuestionController.FourAnswers" xml:space="preserve">
    <value>You need to add only 4 answers</value>
  </data>
    <data name="WebApp.Controllers.QuestionController.OneCorrect" xml:space="preserve">
    <value>You need only 1 answer correct</value>
  </data>
    <data name="WebApp.Controllers.QuestionController.DetailsTitle" xml:space="preserve">
    <value>Question details</value>
  </data>
    <data name="WebApp.Controllers.QuestionController.DeleteSuccess" xml:space="preserve">
    <value>Question successfully deleted</value>
  </data>
    <data name="WebApp.Controllers.QuestionController.DeleteUnexpectedError" xml:space="preserve">
    <value>An unexpected error ocurred</value>
  </data>
    <!-- End QuestionController -->
    <!-- UserController -->
    <data name="WebApp.Controllers.UserController.IndexTitle" xml:space="preserve">
    <value>Users</value>
  </data>
    <data name="WebApp.Controllers.UserController.CreateTitle" xml:space="preserve">
    <value>Create new user</value>
  </data>
    <data name="WebApp.Controllers.UserController.EditTitle" xml:space="preserve">
    <value>Edit user</value>
  </data>
    <data name="WebApp.Controllers.UserController.DetailsTitle" xml:space="preserve">
    <value>User details</value>
  </data>
    <data name="WebApp.Controllers.UserController.DeleteSuccess" xml:space="preserve">
    <value>User successfully deleted</value>
  </data>
    <data name="WebApp.Controllers.UserController.DeleteUnexpectedError" xml:space="preserve">
    <value>An unexpected error ocurred</value>
  </data>
    <data name="WebApp.Controllers.UserController.PasswordRecoveryEmailSubject" xml:space="preserve">
    <value>Recover your password</value>
  </data>
    <data name="WebApp.Controllers.UserController.PasswordRecoverySuccess" xml:space="preserve">
    <value>Email was successfully sent</value>
  </data>
    <data name="WebApp.Controllers.UserController.PasswordRecoveryUnexpectedError" xml:space="preserve">
    <value>An unexpected error ocurred</value>
  </data>
    <!-- End UserController -->
    <!-- BackOfficeUserController -->
    <data name="WebApp.Controllers.BackOfficeUserController.IndexTitle" xml:space="preserve">
    <value>BackOffice Users</value>
  </data>
    <data name="WebApp.Controllers.BackOfficeUserController.CreateTitle" xml:space="preserve">
    <value>Create new user</value>
  </data>
    <data name="WebApp.Controllers.BackOfficeUserController.EditTitle" xml:space="preserve">
    <value>Edit user</value>
  </data>
    <data name="WebApp.Controllers.BackOfficeUserController.DetailsTitle" xml:space="preserve">
    <value>User details</value>
  </data>
    <data name="WebApp.Controllers.BackOfficeUserController.DeleteSuccess" xml:space="preserve">
    <value>User successfully deleted</value>
  </data>
    <data name="WebApp.Controllers.BackOfficeUserController.DeleteUnexpectedError" xml:space="preserve">
    <value>An unexpected error ocurred</value>
  </data>
    <data name="WebApp.Controllers.BackOfficeUserController.PasswordRecoveryEmailSubject" xml:space="preserve">
    <value>Recover your password</value>
  </data>
    <data name="WebApp.Controllers.BackOfficeUserController.PasswordRecoverySuccess" xml:space="preserve">
    <value>Email was successfully sent</value>
  </data>
    <data name="WebApp.Controllers.BackOfficeUserController.PasswordRecoveryUnexpectedError" xml:space="preserve">
    <value>An unexpected error ocurred</value>
  </data>
    <!-- End BackOfficeUserController -->
    <!-- FrontUserController -->
    <data name="WebApp.Controllers.FrontUserController.IndexTitle" xml:space="preserve">
    <value>Front Users</value>
  </data>
    <data name="WebApp.Controllers.FrontUserController.CreateTitle" xml:space="preserve">
    <value>Create new user</value>
  </data>
    <data name="WebApp.Controllers.FrontUserController.EditTitle" xml:space="preserve">
    <value>Edit user</value>
  </data>
    <data name="WebApp.Controllers.FrontUserController.DetailsTitle" xml:space="preserve">
    <value>User details</value>
  </data>
    <data name="WebApp.Controllers.FrontUserController.DeleteSuccess" xml:space="preserve">
    <value>User successfully deleted</value>
  </data>
    <data name="WebApp.Controllers.FrontUserController.DeleteUnexpectedError" xml:space="preserve">
    <value>An unexpected error ocurred</value>
  </data>
    <data name="WebApp.Controllers.FrontUserController.PasswordRecoveryEmailSubject" xml:space="preserve">
    <value>Recover your password</value>
  </data>
    <data name="WebApp.Controllers.FrontUserController.PasswordRecoverySuccess" xml:space="preserve">
    <value>Email was successfully sent</value>
  </data>
    <data name="WebApp.Controllers.FrontUserController.PasswordRecoveryUnexpectedError" xml:space="preserve">
    <value>An unexpected error ocurred</value>
  </data>
    <!-- End FrontUserController -->
    <!-- HolidayTypeController  -->
    <data name="WebApp.Controllers.HolidayTypeController.IndexTitle" xml:space="preserve">
    <value>Holiday Types</value>
  </data>
    <data name="WebApp.Controllers.HolidayTypeController.CreateTitle" xml:space="preserve">
    <value>Create new Holiday Type</value>
  </data>
    <data name="WebApp.Controllers.HolidayTypeController.EditTitle" xml:space="preserve">
    <value>Edit Holiday Type</value>
  </data>
    <data name="WebApp.Controllers.HolidayTypeController.DetailsTitle" xml:space="preserve">
    <value>Holiday Type Details</value>
  </data>
    <data name="WebApp.Controllers.HolidayTypeController.DeleteSuccess" xml:space="preserve">
    <value>Holiday Type successfully deleted</value>
  </data>
    <data name="WebApp.Controllers.HolidayTypeController.DeleteUnexpectedError" xml:space="preserve">
    <value>An unexpected error ocurred</value>
  </data>
    <!-- EndHolidayTypeController  -->
    <!-- HolidayController  -->
    <data name="WebApp.Controllers.HolidayController.IndexTitle" xml:space="preserve">
    <value>Holidays</value>
  </data>
    <data name="WebApp.Controllers.HolidayController.CreateTitle" xml:space="preserve">
    <value>Create new Holiday</value>
  </data>
    <data name="WebApp.Controllers.HolidayController.EditTitle" xml:space="preserve">
    <value>Edit Holiday</value>
  </data>
    <data name="WebApp.Controllers.HolidayController.DetailsTitle" xml:space="preserve">
    <value>Holiday Details</value>
  </data>
    <data name="WebApp.Controllers.HolidayController.DeleteSuccess" xml:space="preserve">
    <value>Holiday successfully deleted</value>
  </data>
    <data name="WebApp.Controllers.HolidayController.DeleteUnexpectedError" xml:space="preserve">
    <value>An unexpected error ocurred</value>
  </data>
    <data name="WebApp.Controllers.HolidayController.NoUsersMessage" xml:space="preserve">
    <value>No users</value>
  </data>
    <data name="WebApp.Controllers.HolidayController.ImportUnexpectedError" xml:space="preserve">
    <value>An unexpected error ocurred while importing the excel file</value>
  </data>
    <!-- EndHolidayController  -->
    <!-- TenantController  -->
    <data name="WebApp.Controllers.TenantController.IndexTitle" xml:space="preserve">
    <value>Tenants</value>
  </data>
    <data name="WebApp.Controllers.TenantController.CreateTitle" xml:space="preserve">
    <value>Create new Tenant</value>
  </data>
    <data name="WebApp.Controllers.TenantController.EditTitle" xml:space="preserve">
    <value>Edit Tenant</value>
  </data>
    <data name="WebApp.Controllers.TenantController.DetailsTitle" xml:space="preserve">
    <value>Tenant Details</value>
  </data>
    <data name="WebApp.Controllers.TenantController.DeleteSuccess" xml:space="preserve">
    <value>Tenant successfully deleted</value>
  </data>
    <data name="WebApp.Controllers.TenantController.DeleteUnexpectedError" xml:space="preserve">
    <value>An unexpected error ocurred</value>
  </data>
    <!-- End TenantController  -->
    <!-- EventController  -->
    <data name="WebApp.Controllers.EventController.IndexTitle" xml:space="preserve">
    <value>Events</value>
  </data>
    <data name="WebApp.Controllers.EventController.CreateTitle" xml:space="preserve">
    <value>Create new Event</value>
  </data>
    <data name="WebApp.Controllers.EventController.EditTitle" xml:space="preserve">
    <value>Edit Event</value>
  </data>
    <data name="WebApp.Controllers.EventController.DetailsTitle" xml:space="preserve">
    <value>Event Details</value>
  </data>
    <data name="WebApp.Controllers.EventController.DeleteSuccess" xml:space="preserve">
    <value>Event successfully deleted</value>
  </data>
    <data name="WebApp.Controllers.EventController.DeleteUnexpectedError" xml:space="preserve">
    <value>An unexpected error ocurred deleting Event</value>
  </data>
    <!-- EndEventController  -->
    <!-- End Controllers -->
    <!-- ExceptionHandlerMiddleware -->
    <data name="WebApp.WebTools.ExceptionHandlerMiddleware.ErrorTitle" xml:space="preserve">
    <value>Something went wrong</value>
  </data>
    <data name="WebApp.WebTools.ExceptionHandlerMiddleware.ErrorTitle404" xml:space="preserve">
    <value>404</value>
  </data>
    <data name="WebApp.WebTools.ExceptionHandlerMiddleware.ErrorGenericDescription" xml:space="preserve">
    <value>A team of highly trained binitos has been dispatched to deal with this situation</value>
  </data>
    <!-- End ExceptionHandlerMiddleware -->
    <!-- WebTools -->
    <!-- FileManagerOptions -->
    <data name="WebApp.WebTools.FileManagerOptions.DictDefaultMessage" xml:space="preserve">
    <value>Drop files here to upload.</value>
  </data>
    <data name="WebApp.WebTools.FileManagerOptions.DictCancelUpload" xml:space="preserve">
    <value>Cancel upload...</value>
  </data>
    <data name="WebApp.WebTools.FileManagerOptions.DictUploadCanceled" xml:space="preserve">
    <value>Upload canceled.</value>
  </data>
    <data name="WebApp.WebTools.FileManagerOptions.DictCancelUploadConfirmation" xml:space="preserve">
    <value>Are you sure you want to cancel this upload?</value>
  </data>
    <data name="WebApp.WebTools.FileManagerOptions.DictRemoveFile" xml:space="preserve">
    <value>Remove file.</value>
  </data>
    <data name="WebApp.WebTools.FileManagerOptions.DictMaxFilesExceeded" xml:space="preserve">
    <value>You can not upload any more files.</value>
  </data>
    <data name="WebApp.WebTools.FileManagerOptions.DictInvalidFileType" xml:space="preserve">
    <value>You can’t upload files of this type.</value>
  </data>
    <data name="WebApp.WebTools.FileManagerOptions.DictFileTooBig" xml:space="preserve">
    <value>File is too big ({{filesize}}MiB). Max filesize: {{maxFilesize}}MiB.</value>
  </data>
    <!-- End FileManagerOptions -->
    <!-- SweetAlert -->
    <data name="WebApp.WebTools.SweetAlert.ConfirmLabel" xml:space="preserve">
    <value>Yes</value>
  </data>
    <data name="WebApp.WebTools.SweetAlert.CancelLabel" xml:space="preserve">
    <value>No</value>
  </data>
    <!-- End SweetAlert -->
    <!-- Datatable -->
    <data name="WebApp.WebTools.Datatable.ActionsLabel" xml:space="preserve">
    <value>Actions</value>
  </data>
    <!-- End Datatable -->
    <!-- IgniteAddress -->
    <data name="WebApp.WebTools.IgniteAddress.ClearCurrentLocation" xml:space="preserve">
    <value>Clear current location</value>
  </data>
    <!-- End IgniteAddress -->
    <!-- ExcelImportOptions -->
    <data name="WebApp.WebTools.ExcelImportOptions.ActionUrlNotDefined" xml:space="preserve">
    <value>ActionUrl must be defined.</value>
  </data>
    <data name="WebApp.WebTools.ExcelImportOptions.DictDefaultMessage" xml:space="preserve">
    <value>Drop files here to upload.</value>
  </data>
    <data name="WebApp.WebTools.ExcelImportOptions.DictCancelUpload" xml:space="preserve">
    <value>Cancel upload...</value>
  </data>
    <data name="WebApp.WebTools.ExcelImportOptions.DictUploadCanceled" xml:space="preserve">
    <value>Upload canceled.</value>
  </data>
    <data name="WebApp.WebTools.ExcelImportOptions.DictCancelUploadConfirmation" xml:space="preserve">
    <value>Are you sure you want to cancel this upload?</value>
  </data>
    <data name="WebApp.WebTools.ExcelImportOptions.DictRemoveFile" xml:space="preserve">
    <value>Remove file.</value>
  </data>
    <data name="WebApp.WebTools.ExcelImportOptions.DictMaxFilesExceeded" xml:space="preserve">
    <value>You can not upload any more files.</value>
  </data>
    <data name="WebApp.WebTools.ExcelImportOptions.DictInvalidFileType" xml:space="preserve">
    <value>You can’t upload files of this type.</value>
  </data>
    <data name="WebApp.WebTools.ExcelImportOptions.DictFileTooBig" xml:space="preserve">
    <value>File is too big ({{filesize}}MiB). Max filesize: {{maxFilesize}}MiB.</value>
  </data>
    <data name="WebApp.WebTools.ExcelImportOptions.DictImportSucceededTitle" xml:space="preserve">
    <value>Success!</value>
  </data>
    <data name="WebApp.WebTools.ExcelImportOptions.DictImportSucceededMessage" xml:space="preserve">
    <value>Import succeeded</value>
  </data>
    <data name="WebApp.WebTools.ExcelImportOptions.DictImportFailedTitle" xml:space="preserve">
    <value>Import failed</value>
  </data>
    <!-- End ExcelImportOptions -->
    <!-- End WebTools -->
    <!-- Views -->
    <!-- Category -->
    <!-- CreateOrEdit -->
    <data name="WebApp.Views.Category.CreateOrEdit.BtnCancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
    <data name="WebApp.Views.Category.CreateOrEdit.BtnCreate" xml:space="preserve">
    <value>Create</value>
  </data>
    <data name="WebApp.Views.Category.CreateOrEdit.BtnUpdate" xml:space="preserve">
    <value>Update</value>
  </data>
    <!-- End CreateOrEdit -->
    <!-- Details -->
    <data name="WebApp.Views.Category.Details.BtnBack" xml:space="preserve">
    <value>Back to Category List</value>
  </data>
    <!-- End Details -->
    <!-- Index -->
    <data name="WebApp.Views.Category.Index.BtnNew" xml:space="preserve">
    <value>New Category</value>
  </data>
    <data name="WebApp.Views.Category.Index.TableColName" xml:space="preserve">
    <value>Name</value>
  </data>
    <data name="WebApp.Views.Category.Index.TableColDescription" xml:space="preserve">
    <value>Description</value>
  </data>
    <data name="WebApp.Views.Category.Index.TableColActions" xml:space="preserve">
    <value>Actions</value>
  </data>
    <!-- End Index -->
    <!-- End Category -->
    <!-- Theme -->
    <!-- CreateOrEdit -->
    <data name="WebApp.Views.Theme.CreateOrEdit.BtnCancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
    <data name="WebApp.Views.Theme.CreateOrEdit.BtnCreate" xml:space="preserve">
    <value>Create</value>
  </data>
    <data name="WebApp.Views.Theme.CreateOrEdit.BtnUpdate" xml:space="preserve">
    <value>Edit</value>
  </data>
    <data name="WebApp.Views.Theme.CreateOrEdit.BtnDeleteFeature" xml:space="preserve">
    <value>Delete</value>
  </data>
    <data name="WebApp.Views.Theme.CreateOrEdit.NameLabel" xml:space="preserve">
    <value>Name</value>
  </data>
    <data name="WebApp.Views.Theme.CreateOrEdit.ColorLabel" xml:space="preserve">
    <value>Color</value>
  </data>
    <data name="WebApp.Views.Theme.CreateOrEdit.QuestionQuantityLabel" xml:space="preserve">
    <value>Question Quantity</value>
  </data>
    <!-- End CreateOrEdit -->
  <!-- Question -->
  <data name="WebApp.Views.Question.Index.BtnNew" xml:space="preserve">
    <value>New Question</value>
  </data>
  <data name="WebApp.Views.Question.Index.TableColName" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="WebApp.Views.Question.Index.TableColTheme" xml:space="preserve">
    <value>Theme</value>
  </data>
  <data name="WebApp.Views.Question.Index.TableColActions" xml:space="preserve">
    <value>Actions</value>
  </data>
  <!-- CreateOrEdit -->
  <data name="WebApp.Views.Question.CreateOrEdit.BtnCancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="WebApp.Views.Question.CreateOrEdit.BtnCreate" xml:space="preserve">
    <value>Create</value>
  </data>
  <data name="WebApp.Views.Question.CreateOrEdit.BtnUpdate" xml:space="preserve">
    <value>Edit</value>
  </data>
  <data name="WebApp.Views.Question.CreateOrEdit.BtnDeleteFeature" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="WebApp.Models.QuestionViewModel.NameLabel" xml:space="preserve">
    <value>Question title</value>
  </data>
  <data name="WebApp.Models.QuestionViewModel.ThemeLabel" xml:space="preserve">
    <value>Choose theme</value>
  </data>
  <data name="WebApp.Views.Question.CreateOrEdit.PlaceholderSelectQuestion" xml:space="preserve">
    <value>Choose theme</value>
  </data>
  <data name="WebApp.Models.QuestionViewModel.NameRequired" xml:space="preserve">
    <value>This field is required</value>
  </data>

  <!-- End CreateOrEdit -->
    <!-- Details -->
    <data name="WebApp.Views.Theme.Details.BtnBack" xml:space="preserve">
    <value>Back</value>
  </data>
    <!-- End Details -->
    <!-- Index -->
    <data name="WebApp.Views.Theme.Index.BtnNew" xml:space="preserve">
    <value>New Theme</value>
  </data>
    <data name="WebApp.Views.Theme.Index.TableColName" xml:space="preserve">
    <value>Name</value>
  </data>
    <data name="WebApp.Views.Theme.Index.TableColColor" xml:space="preserve">
    <value>Color</value>
  </data>
    <data name="WebApp.Views.Theme.Index.TableColQuestionQuantity" xml:space="preserve">
    <value>Question Quantity</value>
  </data>
    <data name="WebApp.Models.ThemeViewModel.NameLabel" xml:space="preserve">
    <value>Theme Name</value>
  </data>
    <data name="WebApp.Models.ThemeViewModel.ColorLabel" xml:space="preserve">
    <value>Theme Color</value>
  </data>
    <data name="WebApp.Models.ThemeViewModel.QuestionQuantityLabel" xml:space="preserve">
        <value>Question Quantity </value>
  </data>
  <data name="WebApp.Models.ThemeViewModel.NameRequired" xml:space="preserve">
    <value>Theme name is required</value>
  </data>
    
    <!-- End Index -->
    <!-- End Theme -->
    <!-- Genre -->
    <!-- CreateOrEdit -->
    <data name="WebApp.Views.Genero.CreateOrEdit.BtnCancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
    <data name="WebApp.Views.Genero.CreateOrEdit.BtnCreate" xml:space="preserve">
    <value>Create</value>
  </data>
    <data name="WebApp.Views.Genero.CreateOrEdit.BtnUpdate" xml:space="preserve">
    <value>Update</value>
  </data>
    <!-- End CreateOrEdit -->
    <!-- Details -->
    <data name="WebApp.Views.Genero.Details.BtnBack" xml:space="preserve">
    <value>Back to Genre List</value>
  </data>
    <!-- End Details -->
    <!-- Index -->
    <data name="WebApp.Views.Genero.Index.BtnNew" xml:space="preserve">
    <value>New Genre</value>
  </data>
    <data name="WebApp.Views.Genero.Index.TableColName" xml:space="preserve">
    <value>Name</value>
  </data>
    <data name="WebApp.Views.Genero.Index.TableColDescription" xml:space="preserve">
    <value>Description</value>
  </data>
    <data name="WebApp.Views.Genero.Index.TableColActions" xml:space="preserve">
    <value>Actions</value>
  </data>
    <!-- End Index -->
    <!-- End Genre -->
    <!-- HolidayType -->
    <!-- CreateOrEdit -->
    <data name="WebApp.Views.HolidayType.CreateOrEdit.BtnCancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
    <data name="WebApp.Views.HolidayType.CreateOrEdit.BtnCreate" xml:space="preserve">
    <value>Create</value>
  </data>
    <data name="WebApp.Views.HolidayType.CreateOrEdit.BtnUpdate" xml:space="preserve">
    <value>Update</value>
  </data>
    <!-- End CreateOrEdit -->
    <!-- Details -->
    <data name="WebApp.Views.HolidayType.Details.BtnBack" xml:space="preserve">
    <value>Back to Holiday Type List</value>
  </data>
    <!-- End Details -->
    <!-- Index -->
    <data name="WebApp.Views.HolidayType.Index.BtnNew" xml:space="preserve">
    <value>New Holiday Type</value>
  </data>
    <data name="WebApp.Views.HolidayType.Index.TableColName" xml:space="preserve">
    <value>Name</value>
  </data>
    <data name="WebApp.Views.HolidayType.Index.TableColDescription" xml:space="preserve">
    <value>Description</value>
  </data>
    <data name="WebApp.Views.HolidayType.Index.TableColActions" xml:space="preserve">
    <value>Actions</value>
  </data>
    <!-- End Index -->
    <!-- End HolidayType -->
    <!-- Holiday -->
    <!-- CreateOrEdit -->
    <data name="WebApp.Views.Holiday.CreateOrEdit.BtnCancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
    <data name="WebApp.Views.Holiday.CreateOrEdit.BtnCreate" xml:space="preserve">
    <value>Create</value>
  </data>
    <data name="WebApp.Views.Holiday.CreateOrEdit.BtnUpdate" xml:space="preserve">
    <value>Update</value>
  </data>
    <data name="WebApp.Views.Holiday.CreateOrEdit.PlaceholderSelectReason" xml:space="preserve">
    <value>Please select one reason</value>
  </data>
    <!-- End CreateOrEdit -->
    <!-- Details -->
    <data name="WebApp.Views.Holiday.Details.BtnBack" xml:space="preserve">
    <value>Back to Holiday List</value>
  </data>
    <!-- End Details -->
    <!-- Index -->
    <data name="WebApp.Views.Holiday.Index.BtnNew" xml:space="preserve">
    <value>New Holiday</value>
  </data>
    <data name="WebApp.Views.Holiday.Index.BtnExportAll" xml:space="preserve">
    <value>Export all</value>
  </data>
    <data name="WebApp.Views.Holiday.Index.BtnExportFiltered" xml:space="preserve">
    <value>Export filtered</value>
  </data>
    <data name="WebApp.Views.Holiday.Index.TableColName" xml:space="preserve">
    <value>Name</value>
  </data>
    <data name="WebApp.Views.Holiday.Index.TableColDescription" xml:space="preserve">
    <value>Description</value>
  </data>
    <data name="WebApp.Views.Holiday.Index.TableColReason" xml:space="preserve">
    <value>Reason</value>
  </data>
    <data name="WebApp.Views.Holiday.Index.TableColUsers" xml:space="preserve">
    <value>Users</value>
  </data>
    <data name="WebApp.Views.Holiday.Index.TableColActions" xml:space="preserve">
    <value>Actions</value>
  </data>
    <!-- End Index -->
    <!-- End Holiday -->
    <!-- Home -->
    <!-- Privacy -->
    <data name="WebApp.Views.Home.Privacy.Detail" xml:space="preserve">
    <value>Use this page to detail your site's privacy policy.</value>
  </data>
  <data name="WebApp.Views.Home.Index.Title" xml:space="preserve">
    <value>Welcome to Trivia Crack</value>
  </data>
    <!-- End Privacy -->
    <!-- End Home -->
    <!-- Product -->
    <!-- CreateOrEdit -->
    <data name="WebApp.Views.Product.CreateOrEdit.BtnCancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
    <data name="WebApp.Views.Product.CreateOrEdit.BtnCreate" xml:space="preserve">
    <value>Create</value>
  </data>
    <data name="WebApp.Views.Product.CreateOrEdit.BtnUpdate" xml:space="preserve">
    <value>Update</value>
  </data>
    <data name="WebApp.Views.Product.CreateOrEdit.BtnAddFeature" xml:space="preserve">
    <value>Add Feature</value>
  </data>
    <data name="WebApp.Views.Product.CreateOrEdit.BtnDeleteFeature" xml:space="preserve">
    <value>Delete</value>
  </data>
    <data name="WebApp.Views.Product.CreateOrEdit.PlaceholderSelectCategory" xml:space="preserve">
    <value>Please select one category</value>
  </data>
    <data name="WebApp.Views.Product.CreateOrEdit.TableFeatureName" xml:space="preserve">
    <value>Name</value>
  </data>
    <data name="WebApp.Views.Product.CreateOrEdit.TableFeatureDescription" xml:space="preserve">
    <value>Description</value>
  </data>
    <data name="WebApp.Views.Product.CreateOrEdit.TableFeatureActions" xml:space="preserve">
    <value>Actions</value>
  </data>
    <!-- End CreateOrEdit -->
    <!-- Details -->
    <data name="WebApp.Views.Product.Details.BtnBack" xml:space="preserve">
    <value>Back to Product List</value>
  </data>
    <!-- End Details -->
    <!-- Index -->
    <data name="WebApp.Views.Product.Index.BtnNew" xml:space="preserve">
    <value>New Product</value>
  </data>
    <data name="WebApp.Views.Product.Index.TableColName" xml:space="preserve">
    <value>Name</value>
  </data>
    <data name="WebApp.Views.Product.Index.TableColDescription" xml:space="preserve">
    <value>Description</value>
  </data>
    <data name="WebApp.Views.Product.Index.TableColPrice" xml:space="preserve">
    <value>Price</value>
  </data>
    <data name="WebApp.Views.Product.Index.TableColActions" xml:space="preserve">
    <value>Actions</value>
  </data>
    <!-- End Index -->
    <!-- End Product -->
    <!-- Question -->
    <!-- CreateOrEdit -->
    <data name="WebApp.Views.Question.CreateOrEdit.BtnCancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
    <data name="WebApp.Views.Question.CreateOrEdit.BtnCreate" xml:space="preserve">
    <value>Create</value>
  </data>
    <data name="WebApp.Views.Question.CreateOrEdit.BtnUpdate" xml:space="preserve">
    <value>Update</value>
  </data>
    <data name="WebApp.Views.Question.CreateOrEdit.BtnAddAnswer" xml:space="preserve">
    <value>Add Answer</value>
  </data>
    <data name="WebApp.Views.Question.CreateOrEdit.BtnDeleteAnswer" xml:space="preserve">
    <value>Delete</value>
  </data>
    <data name="WebApp.Views.Question.CreateOrEdit.PlaceholderSelectAnswer" xml:space="preserve">
    <value>Please select one category</value>
  </data>
    <data name="WebApp.Views.Question.CreateOrEdit.TableAnswerName" xml:space="preserve">
    <value>Name</value>
  </data>
    <data name="WebApp.Views.Question.CreateOrEdit.TableAnswerIsCorrect" xml:space="preserve">
    <value>Is Correct?</value>
  </data>
    <data name="WebApp.Views.Question.CreateOrEdit.TableAnswerActions" xml:space="preserve">
    <value>Actions</value>
    
  </data>
    <!-- End CreateOrEdit -->
    <!-- Details -->
    <data name="WebApp.Views.Question.Details.BtnBack" xml:space="preserve">
    <value>Back to Question List</value>
  </data>
    <data name="WebApp.Views.Question.Details.TableAnswerName" xml:space="preserve">
    <value>Name</value>
  </data>
    <data name="WebApp.Views.Question.Details.TableAnswerIsCorrect" xml:space="preserve">
    <value>Is Correct?</value>
    </data>
    <!-- End Details -->
    <!-- Index -->
    <data name="WebApp.Views.Question.Index.BtnNew" xml:space="preserve">
    <value>New Question</value>
  </data>
    <data name="WebApp.Views.Question.Index.TableColName" xml:space="preserve">
    <value>Name</value>
  </data>
    <data name="WebApp.Views.Question.Index.TableColTheme" xml:space="preserve">
    <value>Theme</value>
  </data>
    <data name="WebApp.Views.Question.Index.TableColActions" xml:space="preserve">
    <value>Actions</value>
  </data>
    <!-- End Index -->
    <!-- End Question -->
    <!-- User -->
    <!-- CreateOrEdit -->
    <data name="WebApp.Views.User.CreateOrEdit.BtnCancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
    <data name="WebApp.Views.User.CreateOrEdit.BtnCreate" xml:space="preserve">
    <value>Create</value>
  </data>
    <data name="WebApp.Views.User.CreateOrEdit.BtnUpdate" xml:space="preserve">
    <value>Update</value>
  </data>
    <data name="WebApp.Views.User.CreateOrEdit.PlaceholderSelectTenant" xml:space="preserve">
    <value>Please select one tenant</value>
  </data>
    <!-- End CreateOrEdit -->
    <!-- Details -->
    <data name="WebApp.Views.User.Details.BtnBack" xml:space="preserve">
    <value>Back to User List</value>
  </data>
    <!-- End Details -->
    <!-- Index -->
    <data name="WebApp.Views.User.Index.BtnNew" xml:space="preserve">
    <value>New User</value>
  </data>
    <data name="WebApp.Views.User.Index.TableColName" xml:space="preserve">
    <value>Name</value>
  </data>
    <data name="WebApp.Views.User.Index.TableColLastName" xml:space="preserve">
    <value>Last name</value>
  </data>
    <data name="WebApp.Views.User.Index.TableColEmail" xml:space="preserve">
    <value>Email</value>
  </data>
    <data name="WebApp.Views.User.Index.TableColPhone" xml:space="preserve">
    <value>Phone number</value>
  </data>
    <data name="WebApp.Views.User.Index.TableColActions" xml:space="preserve">
    <value>Actions</value>
  </data>
    <!-- End Index -->
    <!-- End User -->
    <!-- BackOfficeUser -->
    <!-- CreateOrEdit -->
    <data name="WebApp.Views.BackOfficeUser.CreateOrEdit.BtnCancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
    <data name="WebApp.Views.BackOfficeUser.CreateOrEdit.BtnCreate" xml:space="preserve">
    <value>Create</value>
  </data>
    <data name="WebApp.Views.BackOfficeUser.CreateOrEdit.BtnUpdate" xml:space="preserve">
    <value>Update</value>
  </data>
    <data name="WebApp.Views.BackOfficeUser.CreateOrEdit.PlaceholderSelectTenant" xml:space="preserve">
    <value>Please select one tenant</value>
  </data>
    <!-- End CreateOrEdit -->
    <!-- Details -->
    <data name="WebApp.Views.BackOfficeUser.Details.BtnBack" xml:space="preserve">
    <value>Back to User List</value>
  </data>
    <!-- End Details -->
    <!-- Index -->
    <data name="WebApp.Views.BackOfficeUser.Index.BtnNew" xml:space="preserve">
    <value>New User</value>
  </data>
    <data name="WebApp.Views.BackOfficeUser.Index.TableColName" xml:space="preserve">
    <value>Name</value>
  </data>
    <data name="WebApp.Views.BackOfficeUser.Index.TableColLastName" xml:space="preserve">
    <value>Last name</value>
  </data>
    <data name="WebApp.Views.BackOfficeUser.Index.TableColEmail" xml:space="preserve">
    <value>Email</value>
  </data>
    <data name="WebApp.Views.BackOfficeUser.Index.TableColPhone" xml:space="preserve">
    <value>Phone number</value>
  </data>
    <data name="WebApp.Views.BackOfficeUser.Index.TableColJobTitle" xml:space="preserve">
    <value>Job Title</value>
  </data>
    <data name="WebApp.Views.BackOfficeUser.Index.TableColActions" xml:space="preserve">
    <value>Actions</value>
  </data>
    <!-- End Index -->
    <!-- End BackOfficeUser -->
    <!-- FrontUser -->
    <!-- CreateOrEdit -->
    <data name="WebApp.Views.FrontUser.CreateOrEdit.BtnCancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
    <data name="WebApp.Views.FrontUser.CreateOrEdit.BtnCreate" xml:space="preserve">
    <value>Create</value>
  </data>
    <data name="WebApp.Views.FrontUser.CreateOrEdit.BtnUpdate" xml:space="preserve">
    <value>Update</value>
  </data>
    <data name="WebApp.Views.FrontUser.CreateOrEdit.PlaceholderSelectTenant" xml:space="preserve">
    <value>Please select one tenant</value>
  </data>
    <!-- End CreateOrEdit -->
    <!-- Details -->
    <data name="WebApp.Views.FrontUser.Details.BtnBack" xml:space="preserve">
    <value>Back to User List</value>
  </data>
    <!-- End Details -->
    <!-- Index -->
    <data name="WebApp.Views.FrontUser.Index.BtnNew" xml:space="preserve">
    <value>New User</value>
  </data>
    <data name="WebApp.Views.FrontUser.Index.TableColName" xml:space="preserve">
    <value>Name</value>
  </data>
    <data name="WebApp.Views.FrontUser.Index.TableColLastName" xml:space="preserve">
    <value>Last name</value>
  </data>
    <data name="WebApp.Views.FrontUser.Index.TableColEmail" xml:space="preserve">
    <value>Email</value>
  </data>
    <data name="WebApp.Views.FrontUser.Index.TableColPhone" xml:space="preserve">
    <value>Phone number</value>
  </data>
    <data name="WebApp.Views.FrontUser.Index.TableColBirthdate" xml:space="preserve">
    <value>Birthdate</value>
  </data>
    <data name="WebApp.Views.FrontUser.Index.TableColActions" xml:space="preserve">
    <value>Actions</value>
  </data>
    <!-- End Index -->
    <!-- End FrontUser -->
    <!-- Shared -->
    <!-- Error -->
    <data name="WebApp.Views.Shared.Error.BtnBack" xml:space="preserve">
    <value>Back to home</value>
  </data>
    <!-- End Error -->
    <!-- _LoginPartial -->
    <data name="WebApp.Views.Shared._LoginPartial.BtnAccount" xml:space="preserve">
    <value>Account Settings</value>
  </data>
    <data name="WebApp.Views.Shared._LoginPartial.BtnLogout" xml:space="preserve">
    <value>Logout</value>
  </data>
    <data name="WebApp.Views.Shared._LoginPartial.BtnRegister" xml:space="preserve">
    <value>Register</value>
  </data>
    <data name="WebApp.Views.Shared._LoginPartial.BtnLogin" xml:space="preserve">
    <value>Login</value>
  </data>
    <data name="WebApp.Views.Shared._LoginPartial.NotificationsTitle" xml:space="preserve">
    <value>Notifications</value>
  </data>
    <data name="WebApp.Views.Shared._LoginPartial.BtnAllNotifications" xml:space="preserve">
    <value>Check all notifications</value>
  </data>
    <data name="WebApp.Views.Shared._LoginPartial.Privacy" xml:space="preserve">
    <value>Privacy</value>
  </data>
    <!-- End _LoginPartial -->
    <!-- _Navbar -->
    <data name="WebApp.Views.Shared._Navbar.LogoText" xml:space="preserve">
    <value>Ignite</value>
  </data>
    <!-- End _Navbar -->
    <!-- _Sidebar -->
    <data name="WebApp.Views.Shared._Sidebar.BtnFrontUsers" xml:space="preserve">
    <value>Front Users</value>
  </data>
    <data name="WebApp.Views.Shared._Sidebar.BtnBackOfficeUsers" xml:space="preserve">
    <value>Backoffice Users</value>
  </data>
    <data name="WebApp.Views.Shared._Sidebar.BtnAccount" xml:space="preserve">
    <value>Account settings</value>
  </data>
    <data name="WebApp.Views.Shared._Sidebar.BtnProducts" xml:space="preserve">
    <value>Products</value>
  </data>
    <data name="WebApp.Views.Shared._Sidebar.BtnCategories" xml:space="preserve">
    <value>Categories</value>
  </data>
    <data name="WebApp.Views.Shared._Sidebar.BtnCharts" xml:space="preserve">
    <value>Charts</value>
  </data>
    <data name="WebApp.Views.Shared._Sidebar.BtnHolidayType" xml:space="preserve">
    <value>Holiday Types</value>
  </data>
    <data name="WebApp.Views.Shared._Sidebar.BtnHoliday" xml:space="preserve">
    <value>Holidays</value>
  </data>
    <data name="WebApp.Views.Shared._Sidebar.BtnSettings" xml:space="preserve">
    <value>Settings</value>
  </data>
    <data name="WebApp.Views.Shared._Sidebar.BtnTenants" xml:space="preserve">
    <value>Questions</value>
  </data>
    <data name="WebApp.Views.Shared._Sidebar.BtnEvents" xml:space="preserve">
    <value>Themes</value>
  </data>
    <!-- End _Sidebar -->
    <!-- _FileManager -->
    <data name="WebApp.Views.Shared._FileManager.BtnDownload" xml:space="preserve">
    <value>Download</value>
  </data>
    <data name="WebApp.Views.Shared._FileManager.NoFilesToDisplay" xml:space="preserve">
    <value>There are no files to display</value>
  </data>
    <!-- End _FileManager -->
    <!-- _ExcelImport -->
    <data name="WebApp.Views.Shared._ExcelImport.BtnImport" xml:space="preserve">
    <value>Import</value>
  </data>
    <data name="WebApp.Views.Shared._ExcelImport.BtnClose" xml:space="preserve">
    <value>Close</value>
  </data>
    <data name="WebApp.Views.Shared._ExcelImport.Title" xml:space="preserve">
    <value>Import from excel</value>
  </data>
    <!-- End _ExcelImport -->
    <!-- End Shared -->
    <!-- Tenant -->
    <!-- CreateOrEdit -->
    <data name="WebApp.Views.Tenant.CreateOrEdit.BtnCancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
    <data name="WebApp.Views.Tenant.CreateOrEdit.BtnCreate" xml:space="preserve">
    <value>Create</value>
  </data>
    <data name="WebApp.Views.Tenant.CreateOrEdit.BtnUpdate" xml:space="preserve">
    <value>Update</value>
  </data>
    <!-- End CreateOrEdit -->
    <!-- Details -->
    <data name="WebApp.Views.Tenant.Details.BtnBack" xml:space="preserve">
    <value>Back to Tenants</value>
  </data>
    <!-- End Details -->
    <!-- Index -->
    <data name="WebApp.Views.Tenant.Index.BtnNew" xml:space="preserve">
    <value>New Tenant</value>
  </data>
    <data name="WebApp.Views.Tenant.Index.TableColName" xml:space="preserve">
    <value>Name</value>
  </data>
    <data name="WebApp.Views.Tenant.Index.TableColCode" xml:space="preserve">
    <value>Code</value>
  </data>
    <data name="WebApp.Views.Tenant.Index.TableColPath" xml:space="preserve">
    <value>Path</value>
  </data>
    <data name="WebApp.Views.Tenant.Index.TableColActions" xml:space="preserve">
    <value>Actions</value>
  </data>
    <!-- End Index -->
    <!-- End Tenant -->
    <!-- Event -->
    <!-- CreateOrEdit -->
    <data name="WebApp.Views.Event.CreateOrEdit.BtnCancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
    <data name="WebApp.Views.Event.CreateOrEdit.BtnCreate" xml:space="preserve">
    <value>Create</value>
  </data>
    <data name="WebApp.Views.Event.CreateOrEdit.BtnUpdate" xml:space="preserve">
    <value>Update</value>
  </data>
    <!-- End CreateOrEdit -->
    <!-- Details -->
    <data name="WebApp.Views.Event.Details.BtnBack" xml:space="preserve">
    <value>Back to Event List</value>
  </data>
    <!-- End Details -->
    <!-- Index -->
    <data name="WebApp.Views.Event.Index.BtnNew" xml:space="preserve">
    <value>New Event</value>
  </data>
    <data name="WebApp.Views.Event.Index.TableColName" xml:space="preserve">
    <value>Name</value>
  </data>
    <data name="WebApp.Views.Event.Index.TableColDescription" xml:space="preserve">
    <value>Description</value>
  </data>
    <data name="WebApp.Views.Event.Index.TableColDate" xml:space="preserve">
    <value>Date</value>
  </data>
    <data name="WebApp.Views.Event.Index.TableColActions" xml:space="preserve">
    <value>Actions</value>
  </data>
    <!-- End Index -->
    <!-- End Event -->
    <!-- Charts -->
    <!-- Index -->
    <data name="WebApp.Views.Charts.Index.LineChartTitle" xml:space="preserve">
    <value>Line chart</value>
  </data>
    <data name="WebApp.Views.Charts.Index.BarChartTitle" xml:space="preserve">
    <value>Bar chart</value>
  </data>
    <data name="WebApp.Views.Charts.Index.PieChartTitle" xml:space="preserve">
    <value>Pie chart</value>
  </data>
    <data name="WebApp.Views.Charts.Index.DoughnutChartTitle" xml:space="preserve">
    <value>Doughnut chart</value>
  </data>
    <data name="WebApp.Views.Charts.Index.PolarChartTitle" xml:space="preserve">
    <value>Polar chart</value>
  </data>
    <data name="WebApp.Views.Charts.Index.RadarChartTitle" xml:space="preserve">
    <value>Radar chart</value>
  </data>
    <!-- End Index -->
    <!-- End Charts -->
    <!-- End Views -->
    <!-- Models -->
    <!-- EntityViewModel -->
    <data name="WebApp.Models.EntityViewModel.IdLabel" xml:space="preserve">
    <value>Id</value>
  </data>
    <!-- End EntityViewModel -->
    <!-- ApplicationUserViewModel -->
    <data name="WebApp.Models.ApplicationUserViewModel.EmailRequired" xml:space="preserve">
    <value>Email is required</value>
  </data>
    <data name="WebApp.Models.ApplicationUserViewModel.NameRequired" xml:space="preserve">
    <value>Name is required</value>
  </data>
    <data name="WebApp.Models.ApplicationUserViewModel.LastNameRequired" xml:space="preserve">
    <value>Last name is required</value>
  </data>
    <data name="WebApp.Models.ApplicationUserViewModel.PhoneNumberRequired" xml:space="preserve">
    <value>Phone Number is required</value>
  </data>
    <data name="WebApp.Models.ApplicationUserViewModel.RolesRequired" xml:space="preserve">
    <value>Roles are required</value>
  </data>
    <data name="WebApp.Models.ApplicationUserViewModel.EmailInvalid" xml:space="preserve">
    <value>The Email is not valid.</value>
  </data>
    <data name="WebApp.Models.ApplicationUserViewModel.NameStringLength" xml:space="preserve">
    <value>The Name must be {1} characters max.</value>
  </data>
    <data name="WebApp.Models.ApplicationUserViewModel.LastNameStringLength" xml:space="preserve">
    <value>The Last name must be {1} characters max.</value>
  </data>
    <data name="WebApp.Models.ApplicationUserViewModel.EmailLabel" xml:space="preserve">
    <value>Email</value>
  </data>
    <data name="WebApp.Models.ApplicationUserViewModel.NameLabel" xml:space="preserve">
    <value>Name</value>
  </data>
    <data name="WebApp.Models.ApplicationUserViewModel.LastNameLabel" xml:space="preserve">
    <value>Last name</value>
  </data>
    <data name="WebApp.Models.ApplicationUserViewModel.PhoneNumberLabel" xml:space="preserve">
    <value>Phone Number</value>
  </data>
    <data name="WebApp.Models.ApplicationUserViewModel.RolesLabel" xml:space="preserve">
    <value>Roles</value>
  </data>
    <data name="WebApp.Models.ApplicationUserViewModel.TenantsLabel" xml:space="preserve">
    <value>Tenant</value>
  </data>
    <data name="WebApp.Models.ApplicationUserViewModel.TenantRequired" xml:space="preserve">
    <value>Tenant is required</value>
  </data>
    <!-- End ApplicationUserViewModel -->
    <!-- BackOfficeUserViewModel -->
    <data name="WebApp.Models.BackOfficeUserViewModel.EmailRequired" xml:space="preserve">
    <value>Email is required</value>
  </data>
    <data name="WebApp.Models.BackOfficeUserViewModel.NameRequired" xml:space="preserve">
    <value>Name is required</value>
  </data>
    <data name="WebApp.Models.BackOfficeUserViewModel.LastNameRequired" xml:space="preserve">
    <value>Last name is required</value>
  </data>
    <data name="WebApp.Models.BackOfficeUserViewModel.PhoneNumberRequired" xml:space="preserve">
    <value>Phone Number is required</value>
  </data>
    <data name="WebApp.Models.BackOfficeUserViewModel.RolesRequired" xml:space="preserve">
    <value>Roles are required</value>
  </data>
    <data name="WebApp.Models.BackOfficeUserViewModel.EmailInvalid" xml:space="preserve">
    <value>The Email is not valid.</value>
  </data>
    <data name="WebApp.Models.BackOfficeUserViewModel.NameStringLength" xml:space="preserve">
    <value>The Name must be {1} characters max.</value>
  </data>
    <data name="WebApp.Models.BackOfficeUserViewModel.LastNameStringLength" xml:space="preserve">
    <value>The Last name must be {1} characters max.</value>
  </data>
    <data name="WebApp.Models.BackOfficeUserViewModel.EmailLabel" xml:space="preserve">
    <value>Email</value>
  </data>
    <data name="WebApp.Models.BackOfficeUserViewModel.NameLabel" xml:space="preserve">
    <value>Name</value>
  </data>
    <data name="WebApp.Models.BackOfficeUserViewModel.LastNameLabel" xml:space="preserve">
    <value>Last name</value>
  </data>
    <data name="WebApp.Models.BackOfficeUserViewModel.PhoneNumberLabel" xml:space="preserve">
    <value>Phone Number</value>
  </data>
    <data name="WebApp.Models.BackOfficeUserViewModel.RolesLabel" xml:space="preserve">
    <value>Roles</value>
  </data>
    <data name="WebApp.Models.BackOfficeUserViewModel.TenantsLabel" xml:space="preserve">
    <value>Tenant</value>
  </data>
    <data name="WebApp.Models.BackOfficeUserViewModel.TenantRequired" xml:space="preserve">
    <value>Tenant is required</value>
  </data>
    <data name="WebApp.Models.BackOfficeUserViewModel.JobTitleLabel" xml:space="preserve">
    <value>Job Title</value>
  </data>
    <!-- End BackOfficeUserViewModel -->
    <!-- FrontUserViewModel -->
    <data name="WebApp.Models.FrontUserViewModel.EmailRequired" xml:space="preserve">
    <value>Email is required</value>
  </data>
    <data name="WebApp.Models.FrontUserViewModel.NameRequired" xml:space="preserve">
    <value>Name is required</value>
  </data>
    <data name="WebApp.Models.FrontUserViewModel.LastNameRequired" xml:space="preserve">
    <value>Last name is required</value>
  </data>
    <data name="WebApp.Models.FrontUserViewModel.PhoneNumberRequired" xml:space="preserve">
    <value>Phone Number is required</value>
  </data>
    <data name="WebApp.Models.FrontUserViewModel.RolesRequired" xml:space="preserve">
    <value>Roles are required</value>
  </data>
    <data name="WebApp.Models.FrontUserViewModel.EmailInvalid" xml:space="preserve">
    <value>The Email is not valid.</value>
  </data>
    <data name="WebApp.Models.FrontUserViewModel.NameStringLength" xml:space="preserve">
    <value>The Name must be {1} characters max.</value>
  </data>
    <data name="WebApp.Models.FrontUserViewModel.LastNameStringLength" xml:space="preserve">
    <value>The Last name must be {1} characters max.</value>
  </data>
    <data name="WebApp.Models.FrontUserViewModel.EmailLabel" xml:space="preserve">
    <value>Email</value>
  </data>
    <data name="WebApp.Models.FrontUserViewModel.NameLabel" xml:space="preserve">
    <value>Name</value>
  </data>
    <data name="WebApp.Models.FrontUserViewModel.LastNameLabel" xml:space="preserve">
    <value>Last name</value>
  </data>
    <data name="WebApp.Models.FrontUserViewModel.PhoneNumberLabel" xml:space="preserve">
    <value>Phone Number</value>
  </data>
    <data name="WebApp.Models.FrontUserViewModel.RolesLabel" xml:space="preserve">
    <value>Roles</value>
  </data>
    <data name="WebApp.Models.FrontUserViewModel.TenantsLabel" xml:space="preserve">
    <value>Tenant</value>
  </data>
    <data name="WebApp.Models.FrontUserViewModel.TenantRequired" xml:space="preserve">
    <value>Tenant is required</value>
  </data>
    <data name="WebApp.Models.FrontUserViewModel.BirthdateLabel" xml:space="preserve">
    <value>Birthdate</value>
  </data>
    <!-- End FrontUserViewModel -->
    <!-- CategoryViewModel -->
    <data name="WebApp.Models.CategoryViewModel.NameRequired" xml:space="preserve">
    <value>Name is required</value>
  </data>
    <data name="WebApp.Models.CategoryViewModel.DescriptionRequired" xml:space="preserve">
    <value>Description is required</value>
  </data>
    <data name="WebApp.Models.CategoryViewModel.NameLabel" xml:space="preserve">
    <value>Name</value>
  </data>
    <data name="WebApp.Models.CategoryViewModel.DescriptionLabel" xml:space="preserve">
    <value>Description</value>
  </data>
    <data name="WebApp.Models.CategoryViewModel.DescriptionStringLength" xml:space="preserve">
    <value>The Description must be at least {2} and at max {1} characters long.</value>
  </data>
    <!-- End CategoryViewModel -->
    <!-- FeatureViewModel -->
    <data name="WebApp.Models.FeatureViewModel.NameRequired" xml:space="preserve">
    <value>Name is required</value>
  </data>
    <data name="WebApp.Models.FeatureViewModel.DescriptionRequired" xml:space="preserve">
    <value>Description is required</value>
  </data>
    <data name="WebApp.Models.FeatureViewModel.NameLabel" xml:space="preserve">
    <value>Name</value>
  </data>
    <data name="WebApp.Models.FeatureViewModel.DescriptionLabel" xml:space="preserve">
    <value>Description</value>
  </data>
    <data name="WebApp.Models.FeatureViewModel.DescriptionStringLength" xml:space="preserve">
    <value>The Description must be at least {2} and at max {1} characters long.</value>
  </data>
    <!-- End FeatureViewModel -->
    <!-- ProductViewModel -->
    <data name="WebApp.Models.ProductViewModel.NameRequired" xml:space="preserve">
    <value>Name is required</value>
  </data>
    <data name="WebApp.Models.ProductViewModel.DescriptionRequired" xml:space="preserve">
    <value>Description is required</value>
  </data>
    <data name="WebApp.Models.ProductViewModel.PriceRequired" xml:space="preserve">
    <value>Price is required</value>
  </data>
    <data name="WebApp.Models.ProductViewModel.NameLabel" xml:space="preserve">
    <value>Name</value>
  </data>
    <data name="WebApp.Models.ProductViewModel.DescriptionLabel" xml:space="preserve">
    <value>Description</value>
  </data>
    <data name="WebApp.Models.ProductViewModel.PriceLabel" xml:space="preserve">
    <value>Price</value>
  </data>
    <data name="WebApp.Models.ProductViewModel.ReleaseDateLabel" xml:space="preserve">
    <value>Release Date</value>
  </data>
    <data name="WebApp.Models.ProductViewModel.CategoryLabel" xml:space="preserve">
    <value>Category</value>
  </data>
    <data name="WebApp.Models.ProductViewModel.FeaturesLabel" xml:space="preserve">
    <value>Features</value>
  </data>
    <data name="WebApp.Models.ProductViewModel.EditorsIdsLabel" xml:space="preserve">
    <value>Editors</value>
  </data>
    <data name="WebApp.Models.ProductViewModel.EditorsLabel" xml:space="preserve">
    <value>Editors</value>
  </data>
    <data name="WebApp.Models.ProductViewModel.DescriptionStringLength" xml:space="preserve">
    <value>The Description must be at least {2} and at max {1} characters long.</value>
  </data>
    <!-- End ProductViewModel -->
    <!-- HolidayTypeViewModel -->
    <data name="WebApp.Models.HolidayTypeViewModel.NameRequired" xml:space="preserve">
    <value>Name is required</value>
  </data>
    <data name="WebApp.Models.HolidayTypeViewModel.DescriptionRequired" xml:space="preserve">
    <value>Description is required</value>
  </data>
    <data name="WebApp.Models.HolidayTypeViewModel.NameLabel" xml:space="preserve">
    <value>Name</value>
  </data>
    <data name="WebApp.Models.HolidayTypeViewModel.DescriptionLabel" xml:space="preserve">
    <value>Description</value>
  </data>
    <data name="WebApp.Models.HolidayTypeViewModel.DescriptionStringLength" xml:space="preserve">
    <value>The Description must be at least {2} and at max {1} characters long.</value>
  </data>
    <!-- End HolidayTypeViewModel -->
    <!-- HolidayViewModel -->
    <data name="WebApp.Models.HolidayViewModel.NameRequired" xml:space="preserve">
    <value>Name is required</value>
  </data>
    <data name="WebApp.Models.HolidayViewModel.DescriptionRequired" xml:space="preserve">
    <value>Description is required</value>
  </data>
    <data name="WebApp.Models.HolidayViewModel.NameLabel" xml:space="preserve">
    <value>Name</value>
  </data>
    <data name="WebApp.Models.HolidayViewModel.DescriptionLabel" xml:space="preserve">
    <value>Description</value>
  </data>
    <data name="WebApp.Models.HolidayViewModel.DescriptionStringLength" xml:space="preserve">
    <value>The Description must be at least {2} and at max {1} characters long.</value>
  </data>
    <data name="WebApp.Models.HolidayViewModel.MessageLabel" xml:space="preserve">
    <value>Message</value>
  </data>
    <data name="WebApp.Models.HolidayViewModel.MessageStringLength" xml:space="preserve">
    <value>The Message must a max of {1} characters long.</value>
  </data>
    <data name="WebApp.Models.HolidayViewModel.StartDateRequired" xml:space="preserve">
    <value>Start Date is required</value>
  </data>
    <data name="WebApp.Models.HolidayViewModel.StartDateLabel" xml:space="preserve">
    <value>Start Date</value>
  </data>
    <data name="WebApp.Models.HolidayViewModel.EndDateLabel" xml:space="preserve">
    <value>End Date</value>
  </data>
    <data name="WebApp.Models.HolidayViewModel.ReasonLabel" xml:space="preserve">
    <value>Reason</value>
  </data>
    <data name="WebApp.Models.HolidayViewModel.UsersIdsLabel" xml:space="preserve">
    <value>Users</value>
  </data>
    <data name="WebApp.Models.HolidayViewModel.UsersLabel" xml:space="preserve">
    <value>Users</value>
  </data>
    <data name="WebApp.Models.HolidayViewModel.ReasonRequired" xml:space="preserve">
    <value>Reason is required</value>
  </data>
    <!-- End HolidayViewModel -->
    <!-- TenantViewModel -->
    <data name="WebApp.Models.TenantViewModel.CodeRequired" xml:space="preserve">
    <value>Code is required</value>
  </data>
    <data name="WebApp.Models.TenantViewModel.CodeLabel" xml:space="preserve">
    <value>Code</value>
  </data>
    <data name="WebApp.Models.TenantViewModel.CodeRegexError" xml:space="preserve">
    <value>The code can only contain letters, numbers, dashes and underscores</value>
  </data>
    <data name="WebApp.Models.TenantViewModel.NameRequired" xml:space="preserve">
    <value>Name is required</value>
  </data>
    <data name="WebApp.Models.TenantViewModel.NameLabel" xml:space="preserve">
    <value>Name</value>
  </data>
    <data name="WebApp.Models.TenantViewModel.DescriptionRequired" xml:space="preserve">
    <value>Description is required</value>
  </data>
    <data name="WebApp.Models.TenantViewModel.DescriptionLabel" xml:space="preserve">
    <value>Description</value>
  </data>
    <data name="WebApp.Models.TenantViewModel.DescriptionStringLength" xml:space="preserve">
    <value>The Description must be at least {2} and at max {1} characters long.</value>
  </data>
    <data name="WebApp.Models.TenantViewModel.PathLabel" xml:space="preserve">
    <value>Path</value>
  </data>
    <!-- End TenantViewModel -->
    <!-- EventViewModel -->
    <data name="WebApp.Models.EventViewModel.NameRequired" xml:space="preserve">
    <value>Name is required</value>
  </data>
    <data name="WebApp.Models.EventViewModel.NameLabel" xml:space="preserve">
    <value>Name</value>
  </data>
    <data name="WebApp.Models.EventViewModel.DescriptionRequired" xml:space="preserve">
    <value>Description is required</value>
  </data>
    <data name="WebApp.Models.EventViewModel.DescriptionLabel" xml:space="preserve">
    <value>Description</value>
  </data>
    <data name="WebApp.Models.EventViewModel.DescriptionStringLength" xml:space="preserve">
    <value>The Description must be at least {2} and at max {1} characters long.</value>
  </data>
    <data name="WebApp.Models.EventViewModel.DurationLabel" xml:space="preserve">
    <value>Duration</value>
  </data>
    <data name="WebApp.Models.EventViewModel.DateRequired" xml:space="preserve">
    <value>The Date is required</value>
  </data>
    <data name="WebApp.Models.EventViewModel.DateLabel" xml:space="preserve">
    <value>Date</value>
  </data>
    <data name="WebApp.Models.EventViewModel.TenantLabel" xml:space="preserve">
    <value>Tenant</value>
  </data>
    <data name="WebApp.Models.EventViewModel.TenantRequired" xml:space="preserve">
    <value>Tenant is required</value>
  </data>
    <data name="WebApp.Models.EventViewModel.FilesLabel" xml:space="preserve">
    <value>Files</value>
  </data>
    <data name="WebApp.Models.EventViewModel.LocationLabel" xml:space="preserve">
    <value>Location</value>
  </data>
    <!-- End EventViewModel -->
    <!-- AddressViewModel -->
    <data name="WebApp.Models.AddressViewModel.CodeLabel" xml:space="preserve">
    <value>Code</value>
  </data>
    <data name="WebApp.Models.AddressViewModel.StreetLabel" xml:space="preserve">
    <value>Street</value>
  </data>
    <data name="WebApp.Models.AddressViewModel.StreetNumberLabel" xml:space="preserve">
    <value>Street Number</value>
  </data>
    <data name="WebApp.Models.AddressViewModel.PostalCodeLabel" xml:space="preserve">
    <value>Postal Code</value>
  </data>
    <data name="WebApp.Models.AddressViewModel.LocalityLabel" xml:space="preserve">
    <value>Locality</value>
  </data>
    <data name="WebApp.Models.AddressViewModel.CityLabel" xml:space="preserve">
    <value>City</value>
  </data>
    <data name="WebApp.Models.AddressViewModel.CountryLabel" xml:space="preserve">
    <value>Country</value>
  </data>
    <data name="WebApp.Models.AddressViewModel.LongitudeLabel" xml:space="preserve">
    <value>Longitude</value>
  </data>
    <data name="WebApp.Models.AddressViewModel.LatitudeLabel" xml:space="preserve">
    <value>Latitude</value>
  </data>
    <!-- End AddressViewModel -->
    <!-- ProductRow -->
    <data name="WebApp.Models.ProductRow.DeleteQuestionMessage" xml:space="preserve">
    <value>Are you sure you want to delete {0}?</value>
  </data>
    <data name="WebApp.Models.ProductRow.DeleteConfirmationMessage" xml:space="preserve">
    <value>Deleted!</value>
  </data>
    <!-- End ProductRow -->
    <!-- CategoryRow -->
    <data name="WebApp.Models.CategoryRow.DeleteQuestionMessage" xml:space="preserve">
    <value>Are you sure you want to delete {0}?</value>
  </data>
    <data name="WebApp.Models.CategoryRow.DeleteConfirmationMessage" xml:space="preserve">
    <value>Deleted!</value>
  </data>
    <!-- End CategoryRow -->
    <!-- ApplicationUserRow -->
    <data name="WebApp.Models.ApplicationUserRow.DeleteQuestionMessage" xml:space="preserve">
    <value>Are you sure you want to delete {0} {1}?</value>
  </data>
    <data name="WebApp.Models.ApplicationUserRow.DeleteConfirmationMessage" xml:space="preserve">
    <value>Deleted!</value>
  </data>
    <data name="WebApp.Models.ApplicationUserRow.PasswordRecoveryConfirmationMessage" xml:space="preserve">
    <value>The Recovery Password email was successfully sent to {0}</value>
  </data>
    <data name="WebApp.Models.ApplicationUserRow.PasswordRecoveryLabel" xml:space="preserve">
    <value>Password Recovery</value>
  </data>
    <!-- End ApplicationUserRow -->
    <!-- BackOfficeUserRow -->
    <data name="WebApp.Models.BackOfficeUserRow.DeleteQuestionMessage" xml:space="preserve">
    <value>Are you sure you want to delete {0} {1}?</value>
  </data>
    <data name="WebApp.Models.BackOfficeUserRow.DeleteConfirmationMessage" xml:space="preserve">
    <value>Deleted!</value>
  </data>
    <data name="WebApp.Models.BackOfficeUserRow.PasswordRecoveryConfirmationMessage" xml:space="preserve">
    <value>The Recovery Password email was successfully sent to {0}</value>
  </data>
    <data name="WebApp.Models.BackOfficeUserRow.PasswordRecoveryLabel" xml:space="preserve">
    <value>Password Recovery</value>
  </data>
    <!-- End BackOfficeUserRow -->
    <!-- FrontUserRow -->
    <data name="WebApp.Models.FrontUserRow.DeleteQuestionMessage" xml:space="preserve">
    <value>Are you sure you want to delete {0} {1}?</value>
  </data>
    <data name="WebApp.Models.FrontUserRow.DeleteConfirmationMessage" xml:space="preserve">
    <value>Deleted!</value>
  </data>
    <data name="WebApp.Models.FrontUserRow.PasswordRecoveryConfirmationMessage" xml:space="preserve">
    <value>The Recovery Password email was successfully sent to {0}</value>
  </data>
    <data name="WebApp.Models.FrontUserRow.PasswordRecoveryLabel" xml:space="preserve">
    <value>Password Recovery</value>
  </data>
    <!-- End FrontUserRow -->
    <!-- HolidayRow -->
    <data name="WebApp.Models.HolidayRow.DeleteQuestionMessage" xml:space="preserve">
    <value>Are you sure you want to delete {0}?</value>
  </data>
    <data name="WebApp.Models.HolidayRow.DeleteConfirmationMessage" xml:space="preserve">
    <value>Deleted!</value>
  </data>
    <!-- End HolidayRow -->
    <!-- HolidayTypeRow -->
    <data name="WebApp.Models.HolidayTypeRow.DeleteQuestionMessage" xml:space="preserve">
    <value>Are you sure you want to delete {0}?</value>
  </data>
    <data name="WebApp.Models.HolidayTypeRow.DeleteConfirmationMessage" xml:space="preserve">
    <value>Deleted!</value>
  </data>
    <!-- End HolidayTypeRow -->
    <!-- TenantRow -->
    <data name="WebApp.Models.TenantRow.DeleteQuestionMessage" xml:space="preserve">
    <value>Are you sure you want to delete {0}?</value>
  </data>
    <data name="WebApp.Models.TenantRow.DeleteConfirmationMessage" xml:space="preserve">
    <value>Deleted!</value>
  </data>
    <data name="WebApp.Models.TenantRow.LabelBtnAddChild" xml:space="preserve">
    <value>Child</value>
  </data>
    <!-- End TenantRow -->
    <!-- EventRow -->
    <data name="WebApp.Models.EventRow.DeleteQuestionMessage" xml:space="preserve">
    <value>Are you sure you want to delete {0}?</value>
  </data>
    <data name="WebApp.Models.EventRow.DeleteConfirmationMessage" xml:space="preserve">
    <value>Event deleted!</value>
  </data>
    <!-- End EventRow -->
    <!-- End Models -->
    <!-- Js -->
    <data name="WebApp.Js.Datatables.LanguageProcessing" xml:space="preserve">
    <value>Processing</value>
  </data>
    <data name="WebApp.Js.Datatables.LanguageLengthMenu" xml:space="preserve">
    <value>Show _MENU_ items</value>
  </data>
    <data name="WebApp.Js.Datatables.LanguageZeroRecords" xml:space="preserve">
    <value>There are no items to display</value>
  </data>
    <data name="WebApp.Js.Datatables.LanguageEmptyTable" xml:space="preserve">
    <value>There is no data to display</value>
  </data>
    <data name="WebApp.Js.Datatables.LanguageInfo" xml:space="preserve">
    <value>Showing items from _START_ to _END_ of _TOTAL_ items</value>
  </data>
    <data name="WebApp.Js.Datatables.LanguageInfoEmpty" xml:space="preserve">
    <value>Showing 0 items</value>
  </data>
    <data name="WebApp.Js.Datatables.LanguageInfoFiltered" xml:space="preserve">
    <value>Filtered items of _MAX_</value>
  </data>
    <data name="WebApp.Js.Datatables.LanguageSearch" xml:space="preserve">
    <value>Search:</value>
  </data>
    <data name="WebApp.Js.Datatables.LanguageLoadingRecords" xml:space="preserve">
    <value>Loading...</value>
  </data>
    <data name="WebApp.Js.Datatables.LanguagePaginateFirst" xml:space="preserve">
    <value>First</value>
  </data>
    <data name="WebApp.Js.Datatables.LanguagePaginateLast" xml:space="preserve">
    <value>Last</value>
  </data>
    <data name="WebApp.Js.Datatables.LanguagePaginateNext" xml:space="preserve">
    <value>Next</value>
  </data>
    <data name="WebApp.Js.Datatables.LanguagePaginatePrevious" xml:space="preserve">
    <value>Previous</value>
  </data>
    <data name="WebApp.Js.Datatables.LanguageAriaSortAscending" xml:space="preserve">
    <value>Tap to sort data by this column (Ascending)</value>
  </data>
    <data name="WebApp.Js.Datatables.LanguageAriaSortDescending" xml:space="preserve">
    <value>Tap to sort data by this column (Descending)</value>
  </data>
    <data name="WebApp.Js.Datatables.ButtonsPrint" xml:space="preserve">
    <value>Print</value>
  </data>
    <data name="WebApp.Js.Datatables.LengthMenuAll" xml:space="preserve">
    <value>All</value>
  </data>
    <data name="WebApp.Js.Datatables.NoData" xml:space="preserve">
    <value>No data</value>
  </data>
    <!-- End Js -->
    <!-- End Web App -->
</root>